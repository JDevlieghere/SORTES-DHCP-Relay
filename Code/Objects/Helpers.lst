gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00001 ;--------------------------------------------------------
               00002 ; File Created by SDCC : free open source ANSI-C Compiler
               00003 ; Version 2.9.4 #5595 (Dec 17 2009) (UNIX)
               00004 ; This file was generated Mon Mar 15 11:43:31 2010
               00005 ;--------------------------------------------------------
               00006 ; PIC16 port for the Microchip 16-bit core micros
               00007 ;--------------------------------------------------------
               00008         list    p=18f97j60
               00009 
               00010         radix dec
               00011 
               00012 ;--------------------------------------------------------
               00013 ; public variables in this module
               00014 ;--------------------------------------------------------
               00015         global _GenerateRandomDWORD
               00016         global _StringToIPAddress
               00017         global _btohexa_high
               00018         global _btohexa_low
               00019         global _swaps
               00020         global _swapl
               00021         global _CalcIPChecksum
               00022         global _leftRotateDWORD
               00023         global _strnchr
               00024         global _toRotate
               00025         global _hexatob
               00026 
               00027 ;--------------------------------------------------------
               00028 ; extern variables in this module
               00029 ;--------------------------------------------------------
               00030         extern __gptrget1
               00031         extern __gptrput1
               00032         extern __gptrget2
               00033         extern _EBSTCONbits
               00034         extern _MISTATbits
               00035         extern _EFLOCONbits
               00036         extern _MACON1bits
               00037         extern _MACON2bits
               00038         extern _MACON3bits
               00039         extern _MACON4bits
               00040         extern _MACLCON1bits
               00041         extern _MACLCON2bits
               00042         extern _MICONbits
               00043         extern _MICMDbits
               00044         extern _EWOLIEbits
               00045         extern _EWOLIRbits
               00046         extern _ERXFCONbits
               00047         extern _EIEbits
               00048         extern _ESTATbits
               00049         extern _ECON2bits
               00050         extern _EIRbits
               00051         extern _EDATAbits
               00052         extern _SSP2CON2bits
               00053         extern _SSP2CON1bits
               00054         extern _SSP2STATbits
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00055         extern _ECCP2DELbits
               00056         extern _ECCP2ASbits
               00057         extern _ECCP3DELbits
               00058         extern _ECCP3ASbits
               00059         extern _RCSTA2bits
               00060         extern _TXSTA2bits
               00061         extern _CCP5CONbits
               00062         extern _CCP4CONbits
               00063         extern _T4CONbits
               00064         extern _ECCP1DELbits
               00065         extern _BAUDCON2bits
               00066         extern _BAUDCTL2bits
               00067         extern _BAUDCONbits
               00068         extern _BAUDCON1bits
               00069         extern _BAUDCTLbits
               00070         extern _BAUDCTL1bits
               00071         extern _PORTAbits
               00072         extern _PORTBbits
               00073         extern _PORTCbits
               00074         extern _PORTDbits
               00075         extern _PORTEbits
               00076         extern _PORTFbits
               00077         extern _PORTGbits
               00078         extern _PORTHbits
               00079         extern _PORTJbits
               00080         extern _LATAbits
               00081         extern _LATBbits
               00082         extern _LATCbits
               00083         extern _LATDbits
               00084         extern _LATEbits
               00085         extern _LATFbits
               00086         extern _LATGbits
               00087         extern _LATHbits
               00088         extern _LATJbits
               00089         extern _DDRAbits
               00090         extern _TRISAbits
               00091         extern _DDRBbits
               00092         extern _TRISBbits
               00093         extern _DDRCbits
               00094         extern _TRISCbits
               00095         extern _DDRDbits
               00096         extern _TRISDbits
               00097         extern _DDREbits
               00098         extern _TRISEbits
               00099         extern _DDRFbits
               00100         extern _TRISFbits
               00101         extern _DDRGbits
               00102         extern _TRISGbits
               00103         extern _DDRHbits
               00104         extern _TRISHbits
               00105         extern _DDRJbits
               00106         extern _TRISJbits
               00107         extern _OSCTUNEbits
               00108         extern _MEMCONbits
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00109         extern _PIE1bits
               00110         extern _PIR1bits
               00111         extern _IPR1bits
               00112         extern _PIE2bits
               00113         extern _PIR2bits
               00114         extern _IPR2bits
               00115         extern _PIE3bits
               00116         extern _PIR3bits
               00117         extern _IPR3bits
               00118         extern _EECON1bits
               00119         extern _RCSTAbits
               00120         extern _RCSTA1bits
               00121         extern _TXSTAbits
               00122         extern _TXSTA1bits
               00123         extern _PSPCONbits
               00124         extern _T3CONbits
               00125         extern _CMCONbits
               00126         extern _CVRCONbits
               00127         extern _ECCP1ASbits
               00128         extern _CCP3CONbits
               00129         extern _ECCP3CONbits
               00130         extern _CCP2CONbits
               00131         extern _ECCP2CONbits
               00132         extern _CCP1CONbits
               00133         extern _ECCP1CONbits
               00134         extern _ADCON2bits
               00135         extern _ADCON1bits
               00136         extern _ADCON0bits
               00137         extern _SSP1CON2bits
               00138         extern _SSPCON2bits
               00139         extern _SSP1CON1bits
               00140         extern _SSPCON1bits
               00141         extern _SSP1STATbits
               00142         extern _SSPSTATbits
               00143         extern _T2CONbits
               00144         extern _T1CONbits
               00145         extern _RCONbits
               00146         extern _WDTCONbits
               00147         extern _ECON1bits
               00148         extern _OSCCONbits
               00149         extern _T0CONbits
               00150         extern _STATUSbits
               00151         extern _INTCON3bits
               00152         extern _INTCON2bits
               00153         extern _INTCONbits
               00154         extern _STKPTRbits
               00155         extern _stdin
               00156         extern _stdout
               00157         extern _AN0String
               00158         extern _AppConfig
               00159         extern _activeUDPSocket
               00160         extern _UDPSocketInfo
               00161         extern _UDPTxCount
               00162         extern _UDPRxCount
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00163         extern _LCDText
               00164         extern _MAADR5
               00165         extern _MAADR6
               00166         extern _MAADR3
               00167         extern _MAADR4
               00168         extern _MAADR1
               00169         extern _MAADR2
               00170         extern _EBSTSD
               00171         extern _EBSTCON
               00172         extern _EBSTCS
               00173         extern _EBSTCSL
               00174         extern _EBSTCSH
               00175         extern _MISTAT
               00176         extern _EFLOCON
               00177         extern _EPAUS
               00178         extern _EPAUSL
               00179         extern _EPAUSH
               00180         extern _MACON1
               00181         extern _MACON2
               00182         extern _MACON3
               00183         extern _MACON4
               00184         extern _MABBIPG
               00185         extern _MAIPG
               00186         extern _MAIPGL
               00187         extern _MAIPGH
               00188         extern _MACLCON1
               00189         extern _MACLCON2
               00190         extern _MAMXFL
               00191         extern _MAMXFLL
               00192         extern _MAMXFLH
               00193         extern _MICON
               00194         extern _MICMD
               00195         extern _MIREGADR
               00196         extern _MIWR
               00197         extern _MIWRL
               00198         extern _MIWRH
               00199         extern _MIRD
               00200         extern _MIRDL
               00201         extern _MIRDH
               00202         extern _EHT0
               00203         extern _EHT1
               00204         extern _EHT2
               00205         extern _EHT3
               00206         extern _EHT4
               00207         extern _EHT5
               00208         extern _EHT6
               00209         extern _EHT7
               00210         extern _EPMM0
               00211         extern _EPMM1
               00212         extern _EPMM2
               00213         extern _EPMM3
               00214         extern _EPMM4
               00215         extern _EPMM5
               00216         extern _EPMM6
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00217         extern _EPMM7
               00218         extern _EPMCS
               00219         extern _EPMCSL
               00220         extern _EPMCSH
               00221         extern _EPMO
               00222         extern _EPMOL
               00223         extern _EPMOH
               00224         extern _EWOLIE
               00225         extern _EWOLIR
               00226         extern _ERXFCON
               00227         extern _EPKTCNT
               00228         extern _EWRPT
               00229         extern _EWRPTL
               00230         extern _EWRPTH
               00231         extern _ETXST
               00232         extern _ETXSTL
               00233         extern _ETXSTH
               00234         extern _ETXND
               00235         extern _ETXNDL
               00236         extern _ETXNDH
               00237         extern _ERXST
               00238         extern _ERXSTL
               00239         extern _ERXSTH
               00240         extern _ERXND
               00241         extern _ERXNDL
               00242         extern _ERXNDH
               00243         extern _ERXRDPT
               00244         extern _ERXRDPTL
               00245         extern _ERXRDPTH
               00246         extern _ERXWRPT
               00247         extern _ERXWRPTL
               00248         extern _ERXWRPTH
               00249         extern _EDMAST
               00250         extern _EDMASTL
               00251         extern _EDMASTH
               00252         extern _EDMAND
               00253         extern _EDMANDL
               00254         extern _EDMANDH
               00255         extern _EDMADST
               00256         extern _EDMADSTL
               00257         extern _EDMADSTH
               00258         extern _EDMACS
               00259         extern _EDMACSL
               00260         extern _EDMACSH
               00261         extern _EIE
               00262         extern _ESTAT
               00263         extern _ECON2
               00264         extern _EIR
               00265         extern _EDATA
               00266         extern _SSP2CON2
               00267         extern _SSP2CON1
               00268         extern _SSP2STAT
               00269         extern _SSP2ADD
               00270         extern _SSP2BUF
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00271         extern _ECCP2DEL
               00272         extern _ECCP2AS
               00273         extern _ECCP3DEL
               00274         extern _ECCP3AS
               00275         extern _RCSTA2
               00276         extern _TXSTA2
               00277         extern _TXREG2
               00278         extern _RCREG2
               00279         extern _SPBRG2
               00280         extern _CCP5CON
               00281         extern _CCPR5
               00282         extern _CCPR5L
               00283         extern _CCPR5H
               00284         extern _CCP4CON
               00285         extern _CCPR4
               00286         extern _CCPR4L
               00287         extern _CCPR4H
               00288         extern _T4CON
               00289         extern _PR4
               00290         extern _TMR4
               00291         extern _ECCP1DEL
               00292         extern _ERDPT
               00293         extern _ERDPTL
               00294         extern _ERDPTH
               00295         extern _BAUDCON2
               00296         extern _BAUDCTL2
               00297         extern _SPBRGH2
               00298         extern _BAUDCON
               00299         extern _BAUDCON1
               00300         extern _BAUDCTL
               00301         extern _BAUDCTL1
               00302         extern _SPBRGH
               00303         extern _SPBRGH1
               00304         extern _PORTA
               00305         extern _PORTB
               00306         extern _PORTC
               00307         extern _PORTD
               00308         extern _PORTE
               00309         extern _PORTF
               00310         extern _PORTG
               00311         extern _PORTH
               00312         extern _PORTJ
               00313         extern _LATA
               00314         extern _LATB
               00315         extern _LATC
               00316         extern _LATD
               00317         extern _LATE
               00318         extern _LATF
               00319         extern _LATG
               00320         extern _LATH
               00321         extern _LATJ
               00322         extern _DDRA
               00323         extern _TRISA
               00324         extern _DDRB
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00325         extern _TRISB
               00326         extern _DDRC
               00327         extern _TRISC
               00328         extern _DDRD
               00329         extern _TRISD
               00330         extern _DDRE
               00331         extern _TRISE
               00332         extern _DDRF
               00333         extern _TRISF
               00334         extern _DDRG
               00335         extern _TRISG
               00336         extern _DDRH
               00337         extern _TRISH
               00338         extern _DDRJ
               00339         extern _TRISJ
               00340         extern _OSCTUNE
               00341         extern _MEMCON
               00342         extern _PIE1
               00343         extern _PIR1
               00344         extern _IPR1
               00345         extern _PIE2
               00346         extern _PIR2
               00347         extern _IPR2
               00348         extern _PIE3
               00349         extern _PIR3
               00350         extern _IPR3
               00351         extern _EECON1
               00352         extern _EECON2
               00353         extern _RCSTA
               00354         extern _RCSTA1
               00355         extern _TXSTA
               00356         extern _TXSTA1
               00357         extern _TXREG
               00358         extern _TXREG1
               00359         extern _RCREG
               00360         extern _RCREG1
               00361         extern _SPBRG
               00362         extern _SPBRG1
               00363         extern _PSPCON
               00364         extern _T3CON
               00365         extern _TMR3L
               00366         extern _TMR3H
               00367         extern _CMCON
               00368         extern _CVRCON
               00369         extern _ECCP1AS
               00370         extern _CCP3CON
               00371         extern _ECCP3CON
               00372         extern _CCPR3
               00373         extern _CCPR3L
               00374         extern _CCPR3H
               00375         extern _CCP2CON
               00376         extern _ECCP2CON
               00377         extern _CCPR2
               00378         extern _CCPR2L
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00379         extern _CCPR2H
               00380         extern _CCP1CON
               00381         extern _ECCP1CON
               00382         extern _CCPR1
               00383         extern _CCPR1L
               00384         extern _CCPR1H
               00385         extern _ADCON2
               00386         extern _ADCON1
               00387         extern _ADCON0
               00388         extern _ADRES
               00389         extern _ADRESL
               00390         extern _ADRESH
               00391         extern _SSP1CON2
               00392         extern _SSPCON2
               00393         extern _SSP1CON1
               00394         extern _SSPCON1
               00395         extern _SSP1STAT
               00396         extern _SSPSTAT
               00397         extern _SSP1ADD
               00398         extern _SSPADD
               00399         extern _SSP1BUF
               00400         extern _SSPBUF
               00401         extern _T2CON
               00402         extern _PR2
               00403         extern _TMR2
               00404         extern _T1CON
               00405         extern _TMR1L
               00406         extern _TMR1H
               00407         extern _RCON
               00408         extern _WDTCON
               00409         extern _ECON1
               00410         extern _OSCCON
               00411         extern _T0CON
               00412         extern _TMR0L
               00413         extern _TMR0H
               00414         extern _STATUS
               00415         extern _FSR2L
               00416         extern _FSR2H
               00417         extern _PLUSW2
               00418         extern _PREINC2
               00419         extern _POSTDEC2
               00420         extern _POSTINC2
               00421         extern _INDF2
               00422         extern _BSR
               00423         extern _FSR1L
               00424         extern _FSR1H
               00425         extern _PLUSW1
               00426         extern _PREINC1
               00427         extern _POSTDEC1
               00428         extern _POSTINC1
               00429         extern _INDF1
               00430         extern _WREG
               00431         extern _FSR0L
               00432         extern _FSR0H
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00433         extern _PLUSW0
               00434         extern _PREINC0
               00435         extern _POSTDEC0
               00436         extern _POSTINC0
               00437         extern _INDF0
               00438         extern _INTCON3
               00439         extern _INTCON2
               00440         extern _INTCON
               00441         extern _PROD
               00442         extern _PRODL
               00443         extern _PRODH
               00444         extern _TABLAT
               00445         extern _TBLPTR
               00446         extern _TBLPTRL
               00447         extern _TBLPTRH
               00448         extern _TBLPTRU
               00449         extern _PC
               00450         extern _PCL
               00451         extern _PCLATH
               00452         extern _PCLATU
               00453         extern _STKPTR
               00454         extern _TOS
               00455         extern _TOSL
               00456         extern _TOSH
               00457         extern _TOSU
               00458         extern _srand
               00459         extern _rand
               00460 ;--------------------------------------------------------
               00461 ;       Equates to used internal registers
               00462 ;--------------------------------------------------------
  00000FD8     00463 STATUS  equ     0xfd8
  00000FE8     00464 WREG    equ     0xfe8
  00000FE9     00465 FSR0L   equ     0xfe9
  00000FE1     00466 FSR1L   equ     0xfe1
  00000FD9     00467 FSR2L   equ     0xfd9
  00000FE5     00468 POSTDEC1        equ     0xfe5
  00000FE4     00469 PREINC1 equ     0xfe4
  00000FDB     00470 PLUSW2  equ     0xfdb
  00000FF3     00471 PRODL   equ     0xff3
  00000FF4     00472 PRODH   equ     0xff4
               00473 
               00474 
               00475 ; Internal registers
               00476 .registers      udata_ovr       0x0000
               00477 r0x00   res     1
               00478 r0x01   res     1
               00479 r0x02   res     1
               00480 r0x03   res     1
               00481 r0x04   res     1
               00482 r0x05   res     1
               00483 r0x06   res     1
               00484 r0x07   res     1
               00485 r0x08   res     1
               00486 r0x09   res     1
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               00487 r0x0a   res     1
               00488 r0x0b   res     1
               00489 r0x0c   res     1
               00490 r0x0d   res     1
               00491 r0x0e   res     1
               00492 r0x0f   res     1
               00493 r0x10   res     1
               00494 r0x11   res     1
               00495 r0x12   res     1
               00496 r0x13   res     1
               00497 r0x14   res     1
               00498 r0x15   res     1
               00499 r0x16   res     1
               00500 r0x17   res     1
               00501 r0x18   res     1
               00502 r0x19   res     1
               00503 r0x1a   res     1
               00504 r0x1b   res     1
               00505 r0x1c   res     1
               00506 r0x1d   res     1
               00507 
               00508 udata_Helpers_0 udata
               00509 _GenerateRandomDWORD_wTime_1_1  res     2
               00510 
               00511 udata_Helpers_1 udata
               00512 _StringToIPAddress_dwVal_1_1    res     4
               00513 
               00514 udata_Helpers_2 udata
               00515 _hexatob_AsciiChars_1_1 res     2
               00516 
               00517 udata_Helpers_3 udata
               00518 _swaps_t_1_1    res     2
               00519 
               00520 udata_Helpers_4 udata
               00521 _swapl_v_1_1    res     4
               00522 
               00523 udata_Helpers_5 udata
               00524 _CalcIPChecksum_count_1_1       res     2
               00525 
               00526 udata_Helpers_6 udata
               00527 _CalcIPChecksum_sum_1_1 res     4
               00528 
               00529 udata_Helpers_7 udata
               00530 _toRotate       res     4
               00531 
               00532 ;--------------------------------------------------------
               00533 ; global & static initialisations
               00534 ;--------------------------------------------------------
               00535 ; I code from now on!
               00536 ; ; Starting pCode block
               00537 S_Helpers__strnchr      code
0000 00538 _strnchr:
               00539 ;       .line   1359; TCPIP_Stack/Helpers.c     char * strnchr(const char *searchString, size_t count, char c)
0000 CFD9 FFE5 00540         MOVFF   FSR2L, POSTDEC1
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0004 CFE1 FFD9 00541         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00542         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00543         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00544         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00545         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00546         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00547         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 00548         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00549         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00550         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 00551         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 00552         MOVFF   r0x0a, POSTDEC1
0034 0E02      00553         MOVLW   0x02
0036 CFDB F000 00554         MOVFF   PLUSW2, r0x00
003A 0E03      00555         MOVLW   0x03
003C CFDB F000 00556         MOVFF   PLUSW2, r0x01
0040 0E04      00557         MOVLW   0x04
0042 CFDB F000 00558         MOVFF   PLUSW2, r0x02
0046 0E05      00559         MOVLW   0x05
0048 CFDB F000 00560         MOVFF   PLUSW2, r0x03
004C 0E06      00561         MOVLW   0x06
004E CFDB F000 00562         MOVFF   PLUSW2, r0x04
0052 0E07      00563         MOVLW   0x07
0054 CFDB F000 00564         MOVFF   PLUSW2, r0x05
               00565 ;       .line   1363; TCPIP_Stack/Helpers.c     while(count--)
0058 C000 F000 00566         MOVFF   r0x00, r0x06
005C C000 F000 00567         MOVFF   r0x01, r0x07
0060 C000 F000 00568         MOVFF   r0x02, r0x08
0064 00569 _00311_DS_:
0064 C000 F000 00570         MOVFF   r0x03, r0x09
0068 C000 F000 00571         MOVFF   r0x04, r0x0a
006C 0EFF      00572         MOVLW   0xff
006E 2600      00573         ADDWF   r0x03, F
0070 A0D8      00574         BTFSS   STATUS, 0
0072 0600      00575         DECF    r0x04, F
0074 5000      00576         MOVF    r0x09, W
0076 1000      00577         IORWF   r0x0a, W
0078 E000      00578         BZ      _00313_DS_
               00579 ;       .line   1365; TCPIP_Stack/Helpers.c     c2  = *searchString++;
007A C000 FFE9 00580         MOVFF   r0x06, FSR0L
007E C000 FFF3 00581         MOVFF   r0x07, PRODL
0082 5000      00582         MOVF    r0x08, W
0084 EC00 F000 00583         CALL    __gptrget1
0088 6E00      00584         MOVWF   r0x09
008A 2A00      00585         INCF    r0x06, F
008C B0D8      00586         BTFSC   STATUS, 0
008E 2A00      00587         INCF    r0x07, F
0090 B0D8      00588         BTFSC   STATUS, 0
0092 2A00      00589         INCF    r0x08, F
               00590 ;       .line   1366; TCPIP_Stack/Helpers.c     if(c2 == 0u)
0094 5000      00591         MOVF    r0x09, W
0096 E100      00592         BNZ     _00308_DS_
               00593 ;       .line   1367; TCPIP_Stack/Helpers.c     return NULL;
0098 6AF4      00594         CLRF    PRODH
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009A 6AF3      00595         CLRF    PRODL
009C 6AE8      00596         CLRF    WREG
009E D000      00597         BRA     _00314_DS_
00A0 00598 _00308_DS_:
               00599 ;       .line   1368; TCPIP_Stack/Helpers.c     if(c2 == c)
00A0 5000      00600         MOVF    r0x09, W
00A2 1800      00601         XORWF   r0x05, W
00A4 E100      00602         BNZ     _00311_DS_
               00603 ;       .line   1369; TCPIP_Stack/Helpers.c     return (char*)--searchString;
00A6 5000      00604         MOVF    r0x06, W
00A8 0FFF      00605         ADDLW   0xff
00AA 6E00      00606         MOVWF   r0x00
00AC 0EFF      00607         MOVLW   0xff
00AE 2000      00608         ADDWFC  r0x07, W
00B0 6E00      00609         MOVWF   r0x01
00B2 0EFF      00610         MOVLW   0xff
00B4 2000      00611         ADDWFC  r0x08, W
00B6 6E00      00612         MOVWF   r0x02
00B8 C000 FFF4 00613         MOVFF   r0x02, PRODH
00BC C000 FFF3 00614         MOVFF   r0x01, PRODL
00C0 5000      00615         MOVF    r0x00, W
00C2 D000      00616         BRA     _00314_DS_
00C4 00617 _00313_DS_:
               00618 ;       .line   1371; TCPIP_Stack/Helpers.c     return NULL;
00C4 6AF4      00619         CLRF    PRODH
00C6 6AF3      00620         CLRF    PRODL
00C8 6AE8      00621         CLRF    WREG
00CA 00622 _00314_DS_:
00CA CFE4 F000 00623         MOVFF   PREINC1, r0x0a
00CE CFE4 F000 00624         MOVFF   PREINC1, r0x09
00D2 CFE4 F000 00625         MOVFF   PREINC1, r0x08
00D6 CFE4 F000 00626         MOVFF   PREINC1, r0x07
00DA CFE4 F000 00627         MOVFF   PREINC1, r0x06
00DE CFE4 F000 00628         MOVFF   PREINC1, r0x05
00E2 CFE4 F000 00629         MOVFF   PREINC1, r0x04
00E6 CFE4 F000 00630         MOVFF   PREINC1, r0x03
00EA CFE4 F000 00631         MOVFF   PREINC1, r0x02
00EE CFE4 F000 00632         MOVFF   PREINC1, r0x01
00F2 CFE4 F000 00633         MOVFF   PREINC1, r0x00
00F6 CFE4 FFD9 00634         MOVFF   PREINC1, FSR2L
00FA 0012      00635         RETURN  
               00636 
               00637 ; ; Starting pCode block
               00638 S_Helpers__leftRotateDWORD      code
0000 00639 _leftRotateDWORD:
               00640 ;       .line   1235; TCPIP_Stack/Helpers.c     DWORD leftRotateDWORD(DWORD val, BYTE bits)
0000 CFD9 FFE5 00641         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00642         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00643         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00644         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00645         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00646         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00647         MOVFF   r0x04, POSTDEC1
001C 0E02      00648         MOVLW   0x02
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001E CFDB F000 00649         MOVFF   PLUSW2, r0x00
0022 0E03      00650         MOVLW   0x03
0024 CFDB F000 00651         MOVFF   PLUSW2, r0x01
0028 0E04      00652         MOVLW   0x04
002A CFDB F000 00653         MOVFF   PLUSW2, r0x02
002E 0E05      00654         MOVLW   0x05
0030 CFDB F000 00655         MOVFF   PLUSW2, r0x03
0034 0E06      00656         MOVLW   0x06
0036 CFDB F000 00657         MOVFF   PLUSW2, r0x04
               00658 ;       .line   1239; TCPIP_Stack/Helpers.c     toRotate.Val = val;
003A 5000      00659         MOVF    r0x00, W
003C 0000      00660         BANKSEL _toRotate
003E 6F00      00661         MOVWF   _toRotate, B
0040 5000      00662         MOVF    r0x01, W
0042 0000      00663         BANKSEL (_toRotate + 1)
0044 6F00      00664         MOVWF   (_toRotate + 1), B
0046 5000      00665         MOVF    r0x02, W
0048 0000      00666         BANKSEL (_toRotate + 2)
004A 6F00      00667         MOVWF   (_toRotate + 2), B
004C 5000      00668         MOVF    r0x03, W
004E 0000      00669         BANKSEL (_toRotate + 3)
0050 6F00      00670         MOVWF   (_toRotate + 3), B
               00671 ;       .line   1241; TCPIP_Stack/Helpers.c     for(i = bits; i >= 8u; i -= 8)
0052 C000 F000 00672         MOVFF   r0x04, r0x00
0056 00673 _00284_DS_:
0056 C000 F000 00674         MOVFF   r0x00, r0x01
005A 6A00      00675         CLRF    r0x02
005C 0E00      00676         MOVLW   0x00
005E 5C00      00677         SUBWF   r0x02, W
0060 E100      00678         BNZ     _00300_DS_
0062 0E08      00679         MOVLW   0x08
0064 5C00      00680         SUBWF   r0x01, W
0066 00681 _00300_DS_:
0066 E300      00682         BNC     _00288_DS_
               00683 ;       .line   1243; TCPIP_Stack/Helpers.c     t = toRotate.v[3];
0068 C000 F000 00684         MOVFF   (_toRotate + 3), r0x01
               00685 ;       .line   1244; TCPIP_Stack/Helpers.c     toRotate.v[3] = toRotate.v[2];
006C C000 F000 00686         MOVFF   (_toRotate + 2), r0x02
0070 5000      00687         MOVF    r0x02, W
0072 0000      00688         BANKSEL (_toRotate + 3)
0074 6F00      00689         MOVWF   (_toRotate + 3), B
               00690 ;       .line   1245; TCPIP_Stack/Helpers.c     toRotate.v[2] = toRotate.v[1];
0076 C000 F000 00691         MOVFF   (_toRotate + 1), r0x02
007A 5000      00692         MOVF    r0x02, W
007C 0000      00693         BANKSEL (_toRotate + 2)
007E 6F00      00694         MOVWF   (_toRotate + 2), B
               00695 ;       .line   1246; TCPIP_Stack/Helpers.c     toRotate.v[1] = toRotate.v[0];
0080 C000 F000 00696         MOVFF   _toRotate, r0x02
0084 5000      00697         MOVF    r0x02, W
0086 0000      00698         BANKSEL (_toRotate + 1)
0088 6F00      00699         MOVWF   (_toRotate + 1), B
               00700 ;       .line   1247; TCPIP_Stack/Helpers.c     toRotate.v[0] = t;
008A 5000      00701         MOVF    r0x01, W
008C 0000      00702         BANKSEL _toRotate
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
008E 6F00      00703         MOVWF   _toRotate, B
               00704 ;       .line   1241; TCPIP_Stack/Helpers.c     for(i = bits; i >= 8u; i -= 8)
0090 0EF8      00705         MOVLW   0xf8
0092 2600      00706         ADDWF   r0x00, F
0094 D000      00707         BRA     _00284_DS_
0096 00708 _00288_DS_:
               00709 ;       .line   1266; TCPIP_Stack/Helpers.c     for(; i != 0u; i--)
0096 C000 F000 00710         MOVFF   r0x00, r0x01
009A 6A00      00711         CLRF    r0x02
009C 5000      00712         MOVF    r0x01, W
009E E100      00713         BNZ     _00302_DS_
00A0 5000      00714         MOVF    r0x02, W
00A2 E000      00715         BZ      _00291_DS_
00A4 00716 _00301_DS_:
00A4 00717 _00302_DS_:
00A4 0100      00718         movlb _toRotate
00A6 90D8      00719         bcf STATUS,0,0
00A8 BF00      00720         btfsc _toRotate+3,7,1
00AA 80D8      00721         bsf STATUS,0,0
00AC 3700      00722         rlcf _toRotate+0,1,1
00AE 3700      00723         rlcf _toRotate+1,1,1
00B0 3700      00724         rlcf _toRotate+2,1,1
00B2 3700      00725         rlcf _toRotate+3,1,1
               00726         
               00727 ;       .line   1266; TCPIP_Stack/Helpers.c     for(; i != 0u; i--)
00B4 0600      00728         DECF    r0x00, F
00B6 D000      00729         BRA     _00288_DS_
00B8 00730 _00291_DS_:
               00731 ;       .line   1281; TCPIP_Stack/Helpers.c     return toRotate.Val;
00B8 C000 FFE9 00732         MOVFF   (_toRotate + 3), FSR0L
00BC C000 FFF4 00733         MOVFF   (_toRotate + 2), PRODH
00C0 C000 FFF3 00734         MOVFF   (_toRotate + 1), PRODL
00C4 0000      00735         BANKSEL _toRotate
00C6 5100      00736         MOVF    _toRotate, W, B
00C8 CFE4 F000 00737         MOVFF   PREINC1, r0x04
00CC CFE4 F000 00738         MOVFF   PREINC1, r0x03
00D0 CFE4 F000 00739         MOVFF   PREINC1, r0x02
00D4 CFE4 F000 00740         MOVFF   PREINC1, r0x01
00D8 CFE4 F000 00741         MOVFF   PREINC1, r0x00
00DC CFE4 FFD9 00742         MOVFF   PREINC1, FSR2L
00E0 0012      00743         RETURN  
               00744 
               00745 ; ; Starting pCode block
               00746 S_Helpers__CalcIPChecksum       code
0000 00747 _CalcIPChecksum:
               00748 ;       .line   1062; TCPIP_Stack/Helpers.c     WORD CalcIPChecksum(BYTE* buffer, WORD count)
0000 CFD9 FFE5 00749         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 00750         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 00751         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 00752         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 00753         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 00754         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 00755         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 00756         MOVFF   r0x05, POSTDEC1
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0020 C000 FFE5 00757         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 00758         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 00759         MOVFF   r0x08, POSTDEC1
002C 0E02      00760         MOVLW   0x02
002E CFDB F000 00761         MOVFF   PLUSW2, r0x00
0032 0E03      00762         MOVLW   0x03
0034 CFDB F000 00763         MOVFF   PLUSW2, r0x01
0038 0E04      00764         MOVLW   0x04
003A CFDB F000 00765         MOVFF   PLUSW2, r0x02
003E 0E05      00766         MOVLW   0x05
0040 CFDB F000 00767         MOVFF   PLUSW2, _CalcIPChecksum_count_1_1
0044 0E06      00768         MOVLW   0x06
0046 CFDB F000 00769         MOVFF   PLUSW2, (_CalcIPChecksum_count_1_1 + 1)
004A 0000      00770         BANKSEL _CalcIPChecksum_sum_1_1
               00771 ;       .line   1066; TCPIP_Stack/Helpers.c     DWORD_VAL sum = {0x00000000ul};
004C 6B00      00772         CLRF    _CalcIPChecksum_sum_1_1, B
004E 0000      00773         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0050 6B00      00774         CLRF    (_CalcIPChecksum_sum_1_1 + 1), B
0052 0000      00775         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0054 6B00      00776         CLRF    (_CalcIPChecksum_sum_1_1 + 2), B
0056 0000      00777         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0058 6B00      00778         CLRF    (_CalcIPChecksum_sum_1_1 + 3), B
005A 0000      00779         BANKSEL _CalcIPChecksum_sum_1_1
005C 6B00      00780         CLRF    _CalcIPChecksum_sum_1_1, B
005E 0000      00781         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0060 6B00      00782         CLRF    (_CalcIPChecksum_sum_1_1 + 1), B
0062 0000      00783         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0064 6B00      00784         CLRF    (_CalcIPChecksum_sum_1_1 + 2), B
0066 0000      00785         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0068 6B00      00786         CLRF    (_CalcIPChecksum_sum_1_1 + 3), B
006A 0000      00787         BANKSEL _CalcIPChecksum_sum_1_1
006C 6B00      00788         CLRF    _CalcIPChecksum_sum_1_1, B
006E 0000      00789         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0070 6B00      00790         CLRF    (_CalcIPChecksum_sum_1_1 + 1), B
0072 0000      00791         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0074 6B00      00792         CLRF    (_CalcIPChecksum_sum_1_1 + 2), B
0076 0000      00793         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0078 6B00      00794         CLRF    (_CalcIPChecksum_sum_1_1 + 3), B
007A 0000      00795         BANKSEL _CalcIPChecksum_sum_1_1
007C 6B00      00796         CLRF    _CalcIPChecksum_sum_1_1, B
007E 0000      00797         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0080 6B00      00798         CLRF    (_CalcIPChecksum_sum_1_1 + 1), B
0082 0000      00799         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0084 6B00      00800         CLRF    (_CalcIPChecksum_sum_1_1 + 2), B
0086 0000      00801         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0088 6B00      00802         CLRF    (_CalcIPChecksum_sum_1_1 + 3), B
008A 0000      00803         BANKSEL _CalcIPChecksum_sum_1_1
008C 6B00      00804         CLRF    _CalcIPChecksum_sum_1_1, B
008E 0000      00805         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0090 6B00      00806         CLRF    (_CalcIPChecksum_sum_1_1 + 1), B
0092 0000      00807         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0094 6B00      00808         CLRF    (_CalcIPChecksum_sum_1_1 + 2), B
0096 0000      00809         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0098 6B00      00810         CLRF    (_CalcIPChecksum_sum_1_1 + 3), B
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
009A 0000      00811         BANKSEL _CalcIPChecksum_sum_1_1
009C 6B00      00812         CLRF    _CalcIPChecksum_sum_1_1, B
009E 0000      00813         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00A0 6B00      00814         CLRF    (_CalcIPChecksum_sum_1_1 + 1), B
00A2 0000      00815         BANKSEL _CalcIPChecksum_sum_1_1
00A4 6B00      00816         CLRF    _CalcIPChecksum_sum_1_1, B
00A6 0000      00817         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00A8 6B00      00818         CLRF    (_CalcIPChecksum_sum_1_1 + 1), B
00AA 0000      00819         BANKSEL _CalcIPChecksum_sum_1_1
00AC 6B00      00820         CLRF    _CalcIPChecksum_sum_1_1, B
00AE 0000      00821         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00B0 6B00      00822         CLRF    (_CalcIPChecksum_sum_1_1 + 1), B
00B2 0000      00823         BANKSEL _CalcIPChecksum_sum_1_1
00B4 9100      00824         BCF     _CalcIPChecksum_sum_1_1, 0, B
00B6 0000      00825         BANKSEL _CalcIPChecksum_sum_1_1
00B8 9300      00826         BCF     _CalcIPChecksum_sum_1_1, 1, B
00BA 0000      00827         BANKSEL _CalcIPChecksum_sum_1_1
00BC 9500      00828         BCF     _CalcIPChecksum_sum_1_1, 2, B
00BE 0000      00829         BANKSEL _CalcIPChecksum_sum_1_1
00C0 9700      00830         BCF     _CalcIPChecksum_sum_1_1, 3, B
00C2 0000      00831         BANKSEL _CalcIPChecksum_sum_1_1
00C4 9900      00832         BCF     _CalcIPChecksum_sum_1_1, 4, B
00C6 0000      00833         BANKSEL _CalcIPChecksum_sum_1_1
00C8 9B00      00834         BCF     _CalcIPChecksum_sum_1_1, 5, B
00CA 0000      00835         BANKSEL _CalcIPChecksum_sum_1_1
00CC 9D00      00836         BCF     _CalcIPChecksum_sum_1_1, 6, B
00CE 0000      00837         BANKSEL _CalcIPChecksum_sum_1_1
00D0 9F00      00838         BCF     _CalcIPChecksum_sum_1_1, 7, B
00D2 0000      00839         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00D4 9100      00840         BCF     (_CalcIPChecksum_sum_1_1 + 1), 0, B
00D6 0000      00841         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00D8 9300      00842         BCF     (_CalcIPChecksum_sum_1_1 + 1), 1, B
00DA 0000      00843         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00DC 9500      00844         BCF     (_CalcIPChecksum_sum_1_1 + 1), 2, B
00DE 0000      00845         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00E0 9700      00846         BCF     (_CalcIPChecksum_sum_1_1 + 1), 3, B
00E2 0000      00847         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00E4 9900      00848         BCF     (_CalcIPChecksum_sum_1_1 + 1), 4, B
00E6 0000      00849         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00E8 9B00      00850         BCF     (_CalcIPChecksum_sum_1_1 + 1), 5, B
00EA 0000      00851         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00EC 9D00      00852         BCF     (_CalcIPChecksum_sum_1_1 + 1), 6, B
00EE 0000      00853         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
00F0 9F00      00854         BCF     (_CalcIPChecksum_sum_1_1 + 1), 7, B
00F2 0000      00855         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
00F4 6B00      00856         CLRF    (_CalcIPChecksum_sum_1_1 + 2), B
00F6 0000      00857         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
00F8 6B00      00858         CLRF    (_CalcIPChecksum_sum_1_1 + 3), B
00FA 0000      00859         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
00FC 6B00      00860         CLRF    (_CalcIPChecksum_sum_1_1 + 2), B
00FE 0000      00861         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0100 6B00      00862         CLRF    (_CalcIPChecksum_sum_1_1 + 3), B
0102 0000      00863         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0104 6B00      00864         CLRF    (_CalcIPChecksum_sum_1_1 + 2), B
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0106 0000      00865         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0108 6B00      00866         CLRF    (_CalcIPChecksum_sum_1_1 + 3), B
010A 0000      00867         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
010C 9100      00868         BCF     (_CalcIPChecksum_sum_1_1 + 2), 0, B
010E 0000      00869         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0110 9300      00870         BCF     (_CalcIPChecksum_sum_1_1 + 2), 1, B
0112 0000      00871         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0114 9500      00872         BCF     (_CalcIPChecksum_sum_1_1 + 2), 2, B
0116 0000      00873         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0118 9700      00874         BCF     (_CalcIPChecksum_sum_1_1 + 2), 3, B
011A 0000      00875         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
011C 9900      00876         BCF     (_CalcIPChecksum_sum_1_1 + 2), 4, B
011E 0000      00877         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0120 9B00      00878         BCF     (_CalcIPChecksum_sum_1_1 + 2), 5, B
0122 0000      00879         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0124 9D00      00880         BCF     (_CalcIPChecksum_sum_1_1 + 2), 6, B
0126 0000      00881         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0128 9F00      00882         BCF     (_CalcIPChecksum_sum_1_1 + 2), 7, B
012A 0000      00883         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
012C 9100      00884         BCF     (_CalcIPChecksum_sum_1_1 + 3), 0, B
012E 0000      00885         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0130 9300      00886         BCF     (_CalcIPChecksum_sum_1_1 + 3), 1, B
0132 0000      00887         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0134 9500      00888         BCF     (_CalcIPChecksum_sum_1_1 + 3), 2, B
0136 0000      00889         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0138 9700      00890         BCF     (_CalcIPChecksum_sum_1_1 + 3), 3, B
013A 0000      00891         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
013C 9900      00892         BCF     (_CalcIPChecksum_sum_1_1 + 3), 4, B
013E 0000      00893         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0140 9B00      00894         BCF     (_CalcIPChecksum_sum_1_1 + 3), 5, B
0142 0000      00895         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0144 9D00      00896         BCF     (_CalcIPChecksum_sum_1_1 + 3), 6, B
0146 0000      00897         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0148 9F00      00898         BCF     (_CalcIPChecksum_sum_1_1 + 3), 7, B
014A 0000      00899         BANKSEL _CalcIPChecksum_sum_1_1
014C 9100      00900         BCF     _CalcIPChecksum_sum_1_1, 0, B
014E 0000      00901         BANKSEL _CalcIPChecksum_sum_1_1
0150 9300      00902         BCF     _CalcIPChecksum_sum_1_1, 1, B
0152 0000      00903         BANKSEL _CalcIPChecksum_sum_1_1
0154 9500      00904         BCF     _CalcIPChecksum_sum_1_1, 2, B
0156 0000      00905         BANKSEL _CalcIPChecksum_sum_1_1
0158 9700      00906         BCF     _CalcIPChecksum_sum_1_1, 3, B
015A 0000      00907         BANKSEL _CalcIPChecksum_sum_1_1
015C 9900      00908         BCF     _CalcIPChecksum_sum_1_1, 4, B
015E 0000      00909         BANKSEL _CalcIPChecksum_sum_1_1
0160 9B00      00910         BCF     _CalcIPChecksum_sum_1_1, 5, B
0162 0000      00911         BANKSEL _CalcIPChecksum_sum_1_1
0164 9D00      00912         BCF     _CalcIPChecksum_sum_1_1, 6, B
0166 0000      00913         BANKSEL _CalcIPChecksum_sum_1_1
0168 9F00      00914         BCF     _CalcIPChecksum_sum_1_1, 7, B
016A 0000      00915         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
016C 9100      00916         BCF     (_CalcIPChecksum_sum_1_1 + 1), 0, B
016E 0000      00917         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0170 9300      00918         BCF     (_CalcIPChecksum_sum_1_1 + 1), 1, B
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0172 0000      00919         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0174 9500      00920         BCF     (_CalcIPChecksum_sum_1_1 + 1), 2, B
0176 0000      00921         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0178 9700      00922         BCF     (_CalcIPChecksum_sum_1_1 + 1), 3, B
017A 0000      00923         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
017C 9900      00924         BCF     (_CalcIPChecksum_sum_1_1 + 1), 4, B
017E 0000      00925         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0180 9B00      00926         BCF     (_CalcIPChecksum_sum_1_1 + 1), 5, B
0182 0000      00927         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0184 9D00      00928         BCF     (_CalcIPChecksum_sum_1_1 + 1), 6, B
0186 0000      00929         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0188 9F00      00930         BCF     (_CalcIPChecksum_sum_1_1 + 1), 7, B
018A 0000      00931         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
018C 9100      00932         BCF     (_CalcIPChecksum_sum_1_1 + 2), 0, B
018E 0000      00933         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0190 9300      00934         BCF     (_CalcIPChecksum_sum_1_1 + 2), 1, B
0192 0000      00935         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0194 9500      00936         BCF     (_CalcIPChecksum_sum_1_1 + 2), 2, B
0196 0000      00937         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0198 9700      00938         BCF     (_CalcIPChecksum_sum_1_1 + 2), 3, B
019A 0000      00939         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
019C 9900      00940         BCF     (_CalcIPChecksum_sum_1_1 + 2), 4, B
019E 0000      00941         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
01A0 9B00      00942         BCF     (_CalcIPChecksum_sum_1_1 + 2), 5, B
01A2 0000      00943         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
01A4 9D00      00944         BCF     (_CalcIPChecksum_sum_1_1 + 2), 6, B
01A6 0000      00945         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
01A8 9F00      00946         BCF     (_CalcIPChecksum_sum_1_1 + 2), 7, B
01AA 0000      00947         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
01AC 9100      00948         BCF     (_CalcIPChecksum_sum_1_1 + 3), 0, B
01AE 0000      00949         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
01B0 9300      00950         BCF     (_CalcIPChecksum_sum_1_1 + 3), 1, B
01B2 0000      00951         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
01B4 9500      00952         BCF     (_CalcIPChecksum_sum_1_1 + 3), 2, B
01B6 0000      00953         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
01B8 9700      00954         BCF     (_CalcIPChecksum_sum_1_1 + 3), 3, B
01BA 0000      00955         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
01BC 9900      00956         BCF     (_CalcIPChecksum_sum_1_1 + 3), 4, B
01BE 0000      00957         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
01C0 9B00      00958         BCF     (_CalcIPChecksum_sum_1_1 + 3), 5, B
01C2 0000      00959         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
01C4 9D00      00960         BCF     (_CalcIPChecksum_sum_1_1 + 3), 6, B
01C6 0000      00961         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
01C8 9F00      00962         BCF     (_CalcIPChecksum_sum_1_1 + 3), 7, B
               00963 ;       .line   1068; TCPIP_Stack/Helpers.c     i = count >> 1;
01CA 90D8      00964         BCF     STATUS, 0
01CC 0000      00965         BANKSEL (_CalcIPChecksum_count_1_1 + 1)
01CE 3100      00966         RRCF    (_CalcIPChecksum_count_1_1 + 1), W, B
01D0 6E00      00967         MOVWF   r0x04
01D2 0000      00968         BANKSEL _CalcIPChecksum_count_1_1
01D4 3100      00969         RRCF    _CalcIPChecksum_count_1_1, W, B
01D6 6E00      00970         MOVWF   r0x03
01D8 00971 _00274_DS_:
               00972 ;       .line   1072; TCPIP_Stack/Helpers.c     while(i--)
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01D8 C000 F000 00973         MOVFF   r0x03, r0x05
01DC C000 F000 00974         MOVFF   r0x04, r0x06
01E0 0EFF      00975         MOVLW   0xff
01E2 2600      00976         ADDWF   r0x03, F
01E4 A0D8      00977         BTFSS   STATUS, 0
01E6 0600      00978         DECF    r0x04, F
01E8 5000      00979         MOVF    r0x05, W
01EA 1000      00980         IORWF   r0x06, W
01EC E000      00981         BZ      _00276_DS_
               00982 ;       .line   1073; TCPIP_Stack/Helpers.c     sum.Val += (DWORD)*val++;
01EE C000 FFE9 00983         MOVFF   r0x00, FSR0L
01F2 C000 FFF3 00984         MOVFF   r0x01, PRODL
01F6 5000      00985         MOVF    r0x02, W
01F8 EC00 F000 00986         CALL    __gptrget2
01FC 6E00      00987         MOVWF   r0x05
01FE CFF3 F000 00988         MOVFF   PRODL, r0x06
0202 0E02      00989         MOVLW   0x02
0204 2600      00990         ADDWF   r0x00, F
0206 0E00      00991         MOVLW   0x00
0208 2200      00992         ADDWFC  r0x01, F
020A 0E00      00993         MOVLW   0x00
020C 2200      00994         ADDWFC  r0x02, F
020E 6A00      00995         CLRF    r0x07
0210 6A00      00996         CLRF    r0x08
0212 0000      00997         BANKSEL _CalcIPChecksum_sum_1_1
0214 5100      00998         MOVF    _CalcIPChecksum_sum_1_1, W, B
0216 2600      00999         ADDWF   r0x05, F
0218 0000      01000         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
021A 5100      01001         MOVF    (_CalcIPChecksum_sum_1_1 + 1), W, B
021C 2200      01002         ADDWFC  r0x06, F
021E 0000      01003         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0220 5100      01004         MOVF    (_CalcIPChecksum_sum_1_1 + 2), W, B
0222 2200      01005         ADDWFC  r0x07, F
0224 0000      01006         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0226 5100      01007         MOVF    (_CalcIPChecksum_sum_1_1 + 3), W, B
0228 2200      01008         ADDWFC  r0x08, F
022A 5000      01009         MOVF    r0x05, W
022C 0000      01010         BANKSEL _CalcIPChecksum_sum_1_1
022E 6F00      01011         MOVWF   _CalcIPChecksum_sum_1_1, B
0230 5000      01012         MOVF    r0x06, W
0232 0000      01013         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0234 6F00      01014         MOVWF   (_CalcIPChecksum_sum_1_1 + 1), B
0236 5000      01015         MOVF    r0x07, W
0238 0000      01016         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
023A 6F00      01017         MOVWF   (_CalcIPChecksum_sum_1_1 + 2), B
023C 5000      01018         MOVF    r0x08, W
023E 0000      01019         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0240 6F00      01020         MOVWF   (_CalcIPChecksum_sum_1_1 + 3), B
0242 D000      01021         BRA     _00274_DS_
0244 01022 _00276_DS_:
0244 0000      01023         BANKSEL _CalcIPChecksum_count_1_1
               01024 ;       .line   1076; TCPIP_Stack/Helpers.c     if(((WORD_VAL*)&count)->bits.b0)
0246 A100      01025         BTFSS   _CalcIPChecksum_count_1_1, 0, B
0248 D000      01026         BRA     _00278_DS_
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01027 ;       .line   1077; TCPIP_Stack/Helpers.c     sum.Val += (DWORD)*(BYTE*)val;
024A C000 FFE9 01028         MOVFF   r0x00, FSR0L
024E C000 FFF3 01029         MOVFF   r0x01, PRODL
0252 5000      01030         MOVF    r0x02, W
0254 EC00 F000 01031         CALL    __gptrget1
0258 6E00      01032         MOVWF   r0x00
025A 6A00      01033         CLRF    r0x01
025C 6A00      01034         CLRF    r0x02
025E 6A00      01035         CLRF    r0x03
0260 0000      01036         BANKSEL _CalcIPChecksum_sum_1_1
0262 5100      01037         MOVF    _CalcIPChecksum_sum_1_1, W, B
0264 2600      01038         ADDWF   r0x00, F
0266 0000      01039         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0268 5100      01040         MOVF    (_CalcIPChecksum_sum_1_1 + 1), W, B
026A 2200      01041         ADDWFC  r0x01, F
026C 0000      01042         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
026E 5100      01043         MOVF    (_CalcIPChecksum_sum_1_1 + 2), W, B
0270 2200      01044         ADDWFC  r0x02, F
0272 0000      01045         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
0274 5100      01046         MOVF    (_CalcIPChecksum_sum_1_1 + 3), W, B
0276 2200      01047         ADDWFC  r0x03, F
0278 5000      01048         MOVF    r0x00, W
027A 0000      01049         BANKSEL _CalcIPChecksum_sum_1_1
027C 6F00      01050         MOVWF   _CalcIPChecksum_sum_1_1, B
027E 5000      01051         MOVF    r0x01, W
0280 0000      01052         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
0282 6F00      01053         MOVWF   (_CalcIPChecksum_sum_1_1 + 1), B
0284 5000      01054         MOVF    r0x02, W
0286 0000      01055         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
0288 6F00      01056         MOVWF   (_CalcIPChecksum_sum_1_1 + 2), B
028A 5000      01057         MOVF    r0x03, W
028C 0000      01058         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
028E 6F00      01059         MOVWF   (_CalcIPChecksum_sum_1_1 + 3), B
0290 01060 _00278_DS_:
               01061 ;       .line   1080; TCPIP_Stack/Helpers.c     sum.Val = (DWORD)sum.w[0] + (DWORD)sum.w[1];
0290 C000 F000 01062         MOVFF   _CalcIPChecksum_sum_1_1, r0x00
0294 C000 F000 01063         MOVFF   (_CalcIPChecksum_sum_1_1 + 1), r0x01
0298 6A00      01064         CLRF    r0x02
029A 6A00      01065         CLRF    r0x03
029C C000 F000 01066         MOVFF   (_CalcIPChecksum_sum_1_1 + 2), r0x04
02A0 C000 F000 01067         MOVFF   (_CalcIPChecksum_sum_1_1 + 3), r0x05
02A4 6A00      01068         CLRF    r0x06
02A6 6A00      01069         CLRF    r0x07
02A8 5000      01070         MOVF    r0x04, W
02AA 2600      01071         ADDWF   r0x00, F
02AC 5000      01072         MOVF    r0x05, W
02AE 2200      01073         ADDWFC  r0x01, F
02B0 5000      01074         MOVF    r0x06, W
02B2 2200      01075         ADDWFC  r0x02, F
02B4 5000      01076         MOVF    r0x07, W
02B6 2200      01077         ADDWFC  r0x03, F
02B8 5000      01078         MOVF    r0x00, W
02BA 0000      01079         BANKSEL _CalcIPChecksum_sum_1_1
02BC 6F00      01080         MOVWF   _CalcIPChecksum_sum_1_1, B
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02BE 5000      01081         MOVF    r0x01, W
02C0 0000      01082         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
02C2 6F00      01083         MOVWF   (_CalcIPChecksum_sum_1_1 + 1), B
02C4 5000      01084         MOVF    r0x02, W
02C6 0000      01085         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
02C8 6F00      01086         MOVWF   (_CalcIPChecksum_sum_1_1 + 2), B
02CA 5000      01087         MOVF    r0x03, W
02CC 0000      01088         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
02CE 6F00      01089         MOVWF   (_CalcIPChecksum_sum_1_1 + 3), B
02D0 0000      01090         BANKSEL (_CalcIPChecksum_sum_1_1 + 2)
               01091 ;       .line   1084; TCPIP_Stack/Helpers.c     sum.w[0] += sum.w[1];
02D2 5100      01092         MOVF    (_CalcIPChecksum_sum_1_1 + 2), W, B
02D4 0000      01093         BANKSEL _CalcIPChecksum_sum_1_1
02D6 2500      01094         ADDWF   _CalcIPChecksum_sum_1_1, W, B
02D8 6E00      01095         MOVWF   r0x00
02DA 0000      01096         BANKSEL (_CalcIPChecksum_sum_1_1 + 3)
02DC 5100      01097         MOVF    (_CalcIPChecksum_sum_1_1 + 3), W, B
02DE 0000      01098         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
02E0 2100      01099         ADDWFC  (_CalcIPChecksum_sum_1_1 + 1), W, B
02E2 6E00      01100         MOVWF   r0x01
02E4 5000      01101         MOVF    r0x00, W
02E6 0000      01102         BANKSEL _CalcIPChecksum_sum_1_1
02E8 6F00      01103         MOVWF   _CalcIPChecksum_sum_1_1, B
02EA 5000      01104         MOVF    r0x01, W
02EC 0000      01105         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
02EE 6F00      01106         MOVWF   (_CalcIPChecksum_sum_1_1 + 1), B
02F0 0000      01107         BANKSEL _CalcIPChecksum_sum_1_1
               01108 ;       .line   1087; TCPIP_Stack/Helpers.c     return ~sum.w[0];
02F2 1D00      01109         COMF    _CalcIPChecksum_sum_1_1, W, B
02F4 6E00      01110         MOVWF   r0x00
02F6 0000      01111         BANKSEL (_CalcIPChecksum_sum_1_1 + 1)
02F8 1D00      01112         COMF    (_CalcIPChecksum_sum_1_1 + 1), W, B
02FA 6E00      01113         MOVWF   r0x01
02FC C000 FFF3 01114         MOVFF   r0x01, PRODL
0300 5000      01115         MOVF    r0x00, W
0302 CFE4 F000 01116         MOVFF   PREINC1, r0x08
0306 CFE4 F000 01117         MOVFF   PREINC1, r0x07
030A CFE4 F000 01118         MOVFF   PREINC1, r0x06
030E CFE4 F000 01119         MOVFF   PREINC1, r0x05
0312 CFE4 F000 01120         MOVFF   PREINC1, r0x04
0316 CFE4 F000 01121         MOVFF   PREINC1, r0x03
031A CFE4 F000 01122         MOVFF   PREINC1, r0x02
031E CFE4 F000 01123         MOVFF   PREINC1, r0x01
0322 CFE4 F000 01124         MOVFF   PREINC1, r0x00
0326 CFE4 FFD9 01125         MOVFF   PREINC1, FSR2L
032A 0012      01126         RETURN  
               01127 
               01128 ; ; Starting pCode block
               01129 S_Helpers__swapl        code
0000 01130 _swapl:
               01131 ;       .line   1020; TCPIP_Stack/Helpers.c     DWORD swapl(DWORD v)
0000 CFD9 FFE5 01132         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01133         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01134         MOVFF   r0x00, POSTDEC1
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
000C C000 FFE5 01135         MOVFF   r0x01, POSTDEC1
0010 0E02      01136         MOVLW   0x02
0012 CFDB F000 01137         MOVFF   PLUSW2, _swapl_v_1_1
0016 0E03      01138         MOVLW   0x03
0018 CFDB F000 01139         MOVFF   PLUSW2, (_swapl_v_1_1 + 1)
001C 0E04      01140         MOVLW   0x04
001E CFDB F000 01141         MOVFF   PLUSW2, (_swapl_v_1_1 + 2)
0022 0E05      01142         MOVLW   0x05
0024 CFDB F000 01143         MOVFF   PLUSW2, (_swapl_v_1_1 + 3)
               01144 ;       .line   1023; TCPIP_Stack/Helpers.c     ((DWORD_VAL*)&v)->v[0] ^= ((DWORD_VAL*)&v)->v[3];
0028 C000 F000 01145         MOVFF   (_swapl_v_1_1 + 3), r0x00
002C 5000      01146         MOVF    r0x00, W
002E 0000      01147         BANKSEL _swapl_v_1_1
0030 1900      01148         XORWF   _swapl_v_1_1, W, B
0032 6E00      01149         MOVWF   r0x01
0034 5000      01150         MOVF    r0x01, W
0036 0000      01151         BANKSEL _swapl_v_1_1
0038 6F00      01152         MOVWF   _swapl_v_1_1, B
003A 0000      01153         BANKSEL _swapl_v_1_1
               01154 ;       .line   1024; TCPIP_Stack/Helpers.c     ((DWORD_VAL*)&v)->v[3] ^= ((DWORD_VAL*)&v)->v[0];
003C 5100      01155         MOVF    _swapl_v_1_1, W, B
003E 1A00      01156         XORWF   r0x00, F
0040 5000      01157         MOVF    r0x00, W
0042 0000      01158         BANKSEL (_swapl_v_1_1 + 3)
0044 6F00      01159         MOVWF   (_swapl_v_1_1 + 3), B
0046 0000      01160         BANKSEL (_swapl_v_1_1 + 3)
               01161 ;       .line   1025; TCPIP_Stack/Helpers.c     ((DWORD_VAL*)&v)->v[0] ^= ((DWORD_VAL*)&v)->v[3];
0048 5100      01162         MOVF    (_swapl_v_1_1 + 3), W, B
004A 0000      01163         BANKSEL _swapl_v_1_1
004C 1900      01164         XORWF   _swapl_v_1_1, W, B
004E 6E00      01165         MOVWF   r0x00
0050 5000      01166         MOVF    r0x00, W
0052 0000      01167         BANKSEL _swapl_v_1_1
0054 6F00      01168         MOVWF   _swapl_v_1_1, B
               01169 ;       .line   1028; TCPIP_Stack/Helpers.c     ((DWORD_VAL*)&v)->v[1] ^= ((DWORD_VAL*)&v)->v[2];
0056 C000 F000 01170         MOVFF   (_swapl_v_1_1 + 2), r0x00
005A 5000      01171         MOVF    r0x00, W
005C 0000      01172         BANKSEL (_swapl_v_1_1 + 1)
005E 1900      01173         XORWF   (_swapl_v_1_1 + 1), W, B
0060 6E00      01174         MOVWF   r0x01
0062 5000      01175         MOVF    r0x01, W
0064 0000      01176         BANKSEL (_swapl_v_1_1 + 1)
0066 6F00      01177         MOVWF   (_swapl_v_1_1 + 1), B
0068 0000      01178         BANKSEL (_swapl_v_1_1 + 1)
               01179 ;       .line   1029; TCPIP_Stack/Helpers.c     ((DWORD_VAL*)&v)->v[2] ^= ((DWORD_VAL*)&v)->v[1];
006A 5100      01180         MOVF    (_swapl_v_1_1 + 1), W, B
006C 1A00      01181         XORWF   r0x00, F
006E 5000      01182         MOVF    r0x00, W
0070 0000      01183         BANKSEL (_swapl_v_1_1 + 2)
0072 6F00      01184         MOVWF   (_swapl_v_1_1 + 2), B
0074 0000      01185         BANKSEL (_swapl_v_1_1 + 2)
               01186 ;       .line   1030; TCPIP_Stack/Helpers.c     ((DWORD_VAL*)&v)->v[1] ^= ((DWORD_VAL*)&v)->v[2];
0076 5100      01187         MOVF    (_swapl_v_1_1 + 2), W, B
0078 0000      01188         BANKSEL (_swapl_v_1_1 + 1)
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
007A 1900      01189         XORWF   (_swapl_v_1_1 + 1), W, B
007C 6E00      01190         MOVWF   r0x00
007E 5000      01191         MOVF    r0x00, W
0080 0000      01192         BANKSEL (_swapl_v_1_1 + 1)
0082 6F00      01193         MOVWF   (_swapl_v_1_1 + 1), B
               01194 ;       .line   1032; TCPIP_Stack/Helpers.c     return v;
0084 C000 FFE9 01195         MOVFF   (_swapl_v_1_1 + 3), FSR0L
0088 C000 FFF4 01196         MOVFF   (_swapl_v_1_1 + 2), PRODH
008C C000 FFF3 01197         MOVFF   (_swapl_v_1_1 + 1), PRODL
0090 0000      01198         BANKSEL _swapl_v_1_1
0092 5100      01199         MOVF    _swapl_v_1_1, W, B
0094 CFE4 F000 01200         MOVFF   PREINC1, r0x01
0098 CFE4 F000 01201         MOVFF   PREINC1, r0x00
009C CFE4 FFD9 01202         MOVFF   PREINC1, FSR2L
00A0 0012      01203         RETURN  
               01204 
               01205 ; ; Starting pCode block
               01206 S_Helpers__swaps        code
0000 01207 _swaps:
               01208 ;       .line   991; TCPIP_Stack/Helpers.c      WORD swaps(WORD v)
0000 CFD9 FFE5 01209         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01210         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01211         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01212         MOVFF   r0x01, POSTDEC1
0010 0E02      01213         MOVLW   0x02
0012 CFDB F000 01214         MOVFF   PLUSW2, r0x00
0016 0E03      01215         MOVLW   0x03
0018 CFDB F000 01216         MOVFF   PLUSW2, r0x01
               01217 ;       .line   996; TCPIP_Stack/Helpers.c      t.Val   = v;
001C 5000      01218         MOVF    r0x00, W
001E 0000      01219         BANKSEL _swaps_t_1_1
0020 6F00      01220         MOVWF   _swaps_t_1_1, B
0022 5000      01221         MOVF    r0x01, W
0024 0000      01222         BANKSEL (_swaps_t_1_1 + 1)
0026 6F00      01223         MOVWF   (_swaps_t_1_1 + 1), B
               01224 ;       .line   997; TCPIP_Stack/Helpers.c      b       = t.v[1];
0028 C000 F000 01225         MOVFF   (_swaps_t_1_1 + 1), r0x00
               01226 ;       .line   998; TCPIP_Stack/Helpers.c      t.v[1]  = t.v[0];
002C C000 F000 01227         MOVFF   _swaps_t_1_1, r0x01
0030 5000      01228         MOVF    r0x01, W
0032 0000      01229         BANKSEL (_swaps_t_1_1 + 1)
0034 6F00      01230         MOVWF   (_swaps_t_1_1 + 1), B
               01231 ;       .line   999; TCPIP_Stack/Helpers.c      t.v[0]  = b;
0036 5000      01232         MOVF    r0x00, W
0038 0000      01233         BANKSEL _swaps_t_1_1
003A 6F00      01234         MOVWF   _swaps_t_1_1, B
               01235 ;       .line   1001; TCPIP_Stack/Helpers.c     return t.Val;
003C C000 FFF3 01236         MOVFF   (_swaps_t_1_1 + 1), PRODL
0040 0000      01237         BANKSEL _swaps_t_1_1
0042 5100      01238         MOVF    _swaps_t_1_1, W, B
0044 CFE4 F000 01239         MOVFF   PREINC1, r0x01
0048 CFE4 F000 01240         MOVFF   PREINC1, r0x00
004C CFE4 FFD9 01241         MOVFF   PREINC1, FSR2L
0050 0012      01242         RETURN  
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
               01243 
               01244 ; ; Starting pCode block
               01245 S_Helpers__btohexa_low  code
0000 01246 _btohexa_low:
               01247 ;       .line   904; TCPIP_Stack/Helpers.c      BYTE btohexa_low(BYTE b)
0000 CFD9 FFE5 01248         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01249         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01250         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01251         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01252         MOVFF   r0x02, POSTDEC1
0014 0E02      01253         MOVLW   0x02
0016 CFDB F000 01254         MOVFF   PLUSW2, r0x00
               01255 ;       .line   906; TCPIP_Stack/Helpers.c      b &= 0x0F;
001A 0E0F      01256         MOVLW   0x0f
001C 1600      01257         ANDWF   r0x00, F
               01258 ;       .line   907; TCPIP_Stack/Helpers.c      return (b>9u) ? b+'A'-10:b+'0';
001E C000 F000 01259         MOVFF   r0x00, r0x01
0022 6A00      01260         CLRF    r0x02
0024 0E00      01261         MOVLW   0x00
0026 5C00      01262         SUBWF   r0x02, W
0028 E100      01263         BNZ     _00259_DS_
002A 0E0A      01264         MOVLW   0x0a
002C 5C00      01265         SUBWF   r0x01, W
002E 01266 _00259_DS_:
002E E300      01267         BNC     _00255_DS_
0030 0E37      01268         MOVLW   0x37
0032 2400      01269         ADDWF   r0x00, W
0034 6E00      01270         MOVWF   r0x01
0036 D000      01271         BRA     _00256_DS_
0038 01272 _00255_DS_:
0038 0E30      01273         MOVLW   0x30
003A 2400      01274         ADDWF   r0x00, W
003C 6E00      01275         MOVWF   r0x01
003E 01276 _00256_DS_:
003E 5000      01277         MOVF    r0x01, W
0040 CFE4 F000 01278         MOVFF   PREINC1, r0x02
0044 CFE4 F000 01279         MOVFF   PREINC1, r0x01
0048 CFE4 F000 01280         MOVFF   PREINC1, r0x00
004C CFE4 FFD9 01281         MOVFF   PREINC1, FSR2L
0050 0012      01282         RETURN  
               01283 
               01284 ; ; Starting pCode block
               01285 S_Helpers__btohexa_high code
0000 01286 _btohexa_high:
               01287 ;       .line   878; TCPIP_Stack/Helpers.c      BYTE btohexa_high(BYTE b)
0000 CFD9 FFE5 01288         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01289         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01290         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01291         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01292         MOVFF   r0x02, POSTDEC1
0014 0E02      01293         MOVLW   0x02
0016 CFDB F000 01294         MOVFF   PLUSW2, r0x00
               01295 ;       .line   880; TCPIP_Stack/Helpers.c      b >>= 4;
001A 3800      01296         SWAPF   r0x00, W
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
001C 0B0F      01297         ANDLW   0x0f
001E 6E00      01298         MOVWF   r0x00
               01299 ;       .line   881; TCPIP_Stack/Helpers.c      return (b>0x9u) ? b+'A'-10:b+'0';
0020 C000 F000 01300         MOVFF   r0x00, r0x01
0024 6A00      01301         CLRF    r0x02
0026 0E00      01302         MOVLW   0x00
0028 5C00      01303         SUBWF   r0x02, W
002A E100      01304         BNZ     _00248_DS_
002C 0E0A      01305         MOVLW   0x0a
002E 5C00      01306         SUBWF   r0x01, W
0030 01307 _00248_DS_:
0030 E300      01308         BNC     _00245_DS_
0032 0E37      01309         MOVLW   0x37
0034 2400      01310         ADDWF   r0x00, W
0036 6E00      01311         MOVWF   r0x01
0038 D000      01312         BRA     _00246_DS_
003A 01313 _00245_DS_:
003A 0E30      01314         MOVLW   0x30
003C 2400      01315         ADDWF   r0x00, W
003E 6E00      01316         MOVWF   r0x01
0040 01317 _00246_DS_:
0040 5000      01318         MOVF    r0x01, W
0042 CFE4 F000 01319         MOVFF   PREINC1, r0x02
0046 CFE4 F000 01320         MOVFF   PREINC1, r0x01
004A CFE4 F000 01321         MOVFF   PREINC1, r0x00
004E CFE4 FFD9 01322         MOVFF   PREINC1, FSR2L
0052 0012      01323         RETURN  
               01324 
               01325 ; ; Starting pCode block
               01326 S_Helpers__hexatob      code
0000 01327 _hexatob:
               01328 ;       .line   829; TCPIP_Stack/Helpers.c      BYTE hexatob(WORD AsciiCharsarg)
0000 CFD9 FFE5 01329         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01330         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01331         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01332         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01333         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01334         MOVFF   r0x03, POSTDEC1
0018 0E02      01335         MOVLW   0x02
001A CFDB F000 01336         MOVFF   PLUSW2, r0x00
001E 0E03      01337         MOVLW   0x03
0020 CFDB F000 01338         MOVFF   PLUSW2, r0x01
               01339 ;       .line   832; TCPIP_Stack/Helpers.c      AsciiChars.v[0] = (BYTE)AsciiCharsarg&0xFF; //ML
0024 5000      01340         MOVF    r0x00, W
0026 6E00      01341         MOVWF   r0x02
0028 5000      01342         MOVF    r0x02, W
002A 0000      01343         BANKSEL _hexatob_AsciiChars_1_1
002C 6F00      01344         MOVWF   _hexatob_AsciiChars_1_1, B
               01345 ;       .line   833; TCPIP_Stack/Helpers.c      AsciiChars.v[1] = (BYTE)(AsciiCharsarg>>8)&0xFF; //ML
002E 5000      01346         MOVF    r0x01, W
0030 6E00      01347         MOVWF   r0x00
0032 6A00      01348         CLRF    r0x01
0034 5000      01349         MOVF    r0x00, W
0036 0000      01350         BANKSEL (_hexatob_AsciiChars_1_1 + 1)
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0038 6F00      01351         MOVWF   (_hexatob_AsciiChars_1_1 + 1), B
               01352 ;       .line   836; TCPIP_Stack/Helpers.c      if(AsciiChars.v[1] > (int)'F')
003A C000 F000 01353         MOVFF   (_hexatob_AsciiChars_1_1 + 1), r0x01
003E 6A00      01354         CLRF    r0x02
0040 5000      01355         MOVF    r0x02, W
0042 0F80      01356         ADDLW   0x80
0044 0F80      01357         ADDLW   0x80
0046 E100      01358         BNZ     _00235_DS_
0048 0E47      01359         MOVLW   0x47
004A 5C00      01360         SUBWF   r0x00, W
004C 01361 _00235_DS_:
004C E300      01362         BNC     _00220_DS_
               01363 ;       .line   837; TCPIP_Stack/Helpers.c      AsciiChars.v[1] -= (int)'a'-(int)'A';
004E 0EE0      01364         MOVLW   0xe0
0050 2600      01365         ADDWF   r0x01, F
0052 5000      01366         MOVF    r0x01, W
0054 0000      01367         BANKSEL (_hexatob_AsciiChars_1_1 + 1)
0056 6F00      01368         MOVWF   (_hexatob_AsciiChars_1_1 + 1), B
0058 01369 _00220_DS_:
               01370 ;       .line   838; TCPIP_Stack/Helpers.c      if(AsciiChars.v[0] > (int)'F')
0058 C000 F000 01371         MOVFF   _hexatob_AsciiChars_1_1, r0x00
005C C000 F000 01372         MOVFF   r0x00, r0x01
0060 6A00      01373         CLRF    r0x02
0062 5000      01374         MOVF    r0x02, W
0064 0F80      01375         ADDLW   0x80
0066 0F80      01376         ADDLW   0x80
0068 E100      01377         BNZ     _00236_DS_
006A 0E47      01378         MOVLW   0x47
006C 5C00      01379         SUBWF   r0x01, W
006E 01380 _00236_DS_:
006E E300      01381         BNC     _00222_DS_
               01382 ;       .line   839; TCPIP_Stack/Helpers.c      AsciiChars.v[0] -= (int)'a'-(int)'A';
0070 0EE0      01383         MOVLW   0xe0
0072 2600      01384         ADDWF   r0x00, F
0074 5000      01385         MOVF    r0x00, W
0076 0000      01386         BANKSEL _hexatob_AsciiChars_1_1
0078 6F00      01387         MOVWF   _hexatob_AsciiChars_1_1, B
007A 01388 _00222_DS_:
               01389 ;       .line   842; TCPIP_Stack/Helpers.c      if(AsciiChars.v[1] > (int)'9')
007A C000 F000 01390         MOVFF   (_hexatob_AsciiChars_1_1 + 1), r0x00
007E C000 F000 01391         MOVFF   r0x00, r0x01
0082 6A00      01392         CLRF    r0x02
0084 5000      01393         MOVF    r0x02, W
0086 0F80      01394         ADDLW   0x80
0088 0F80      01395         ADDLW   0x80
008A E100      01396         BNZ     _00237_DS_
008C 0E3A      01397         MOVLW   0x3a
008E 5C00      01398         SUBWF   r0x01, W
0090 01399 _00237_DS_:
0090 E300      01400         BNC     _00224_DS_
               01401 ;       .line   843; TCPIP_Stack/Helpers.c      AsciiChars.v[1] -= (int)'A' - 10;
0092 0EC9      01402         MOVLW   0xc9
0094 2400      01403         ADDWF   r0x00, W
0096 6E00      01404         MOVWF   r0x01
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0098 5000      01405         MOVF    r0x01, W
009A 0000      01406         BANKSEL (_hexatob_AsciiChars_1_1 + 1)
009C 6F00      01407         MOVWF   (_hexatob_AsciiChars_1_1 + 1), B
009E D000      01408         BRA     _00225_DS_
00A0 01409 _00224_DS_:
               01410 ;       .line   845; TCPIP_Stack/Helpers.c      AsciiChars.v[1] -= '0';
00A0 0ED0      01411         MOVLW   0xd0
00A2 2600      01412         ADDWF   r0x00, F
00A4 5000      01413         MOVF    r0x00, W
00A6 0000      01414         BANKSEL (_hexatob_AsciiChars_1_1 + 1)
00A8 6F00      01415         MOVWF   (_hexatob_AsciiChars_1_1 + 1), B
00AA 01416 _00225_DS_:
               01417 ;       .line   847; TCPIP_Stack/Helpers.c      if(AsciiChars.v[0] > (int)'9')
00AA C000 F000 01418         MOVFF   _hexatob_AsciiChars_1_1, r0x00
00AE C000 F000 01419         MOVFF   r0x00, r0x01
00B2 6A00      01420         CLRF    r0x02
00B4 5000      01421         MOVF    r0x02, W
00B6 0F80      01422         ADDLW   0x80
00B8 0F80      01423         ADDLW   0x80
00BA E100      01424         BNZ     _00238_DS_
00BC 0E3A      01425         MOVLW   0x3a
00BE 5C00      01426         SUBWF   r0x01, W
00C0 01427 _00238_DS_:
00C0 E300      01428         BNC     _00227_DS_
               01429 ;       .line   848; TCPIP_Stack/Helpers.c      AsciiChars.v[0] -= (int)'A' - 10;
00C2 0EC9      01430         MOVLW   0xc9
00C4 2400      01431         ADDWF   r0x00, W
00C6 6E00      01432         MOVWF   r0x01
00C8 5000      01433         MOVF    r0x01, W
00CA 0000      01434         BANKSEL _hexatob_AsciiChars_1_1
00CC 6F00      01435         MOVWF   _hexatob_AsciiChars_1_1, B
00CE D000      01436         BRA     _00228_DS_
00D0 01437 _00227_DS_:
               01438 ;       .line   850; TCPIP_Stack/Helpers.c      AsciiChars.v[0] -= (int)'0';
00D0 0ED0      01439         MOVLW   0xd0
00D2 2600      01440         ADDWF   r0x00, F
00D4 5000      01441         MOVF    r0x00, W
00D6 0000      01442         BANKSEL _hexatob_AsciiChars_1_1
00D8 6F00      01443         MOVWF   _hexatob_AsciiChars_1_1, B
00DA 01444 _00228_DS_:
               01445 ;       .line   854; TCPIP_Stack/Helpers.c      return (WORD)((AsciiChars.v[1]<<4) |  AsciiChars.v[0]);
00DA C000 F000 01446         MOVFF   (_hexatob_AsciiChars_1_1 + 1), r0x00
00DE 6A00      01447         CLRF    r0x01
00E0 3800      01448         SWAPF   r0x01, W
00E2 0BF0      01449         ANDLW   0xf0
00E4 6E00      01450         MOVWF   r0x03
00E6 3800      01451         SWAPF   r0x00, W
00E8 6E00      01452         MOVWF   r0x02
00EA 0B0F      01453         ANDLW   0x0f
00EC 1A00      01454         XORWF   r0x02, F
00EE 2600      01455         ADDWF   r0x03, F
00F0 C000 F000 01456         MOVFF   _hexatob_AsciiChars_1_1, r0x00
00F4 6A00      01457         CLRF    r0x01
00F6 5000      01458         MOVF    r0x00, W
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00F8 1200      01459         IORWF   r0x02, F
00FA 5000      01460         MOVF    r0x01, W
00FC 1200      01461         IORWF   r0x03, F
00FE 5000      01462         MOVF    r0x02, W
0100 CFE4 F000 01463         MOVFF   PREINC1, r0x03
0104 CFE4 F000 01464         MOVFF   PREINC1, r0x02
0108 CFE4 F000 01465         MOVFF   PREINC1, r0x01
010C CFE4 F000 01466         MOVFF   PREINC1, r0x00
0110 CFE4 FFD9 01467         MOVFF   PREINC1, FSR2L
0114 0012      01468         RETURN  
               01469 
               01470 ; ; Starting pCode block
               01471 S_Helpers__StringToIPAddress    code
0000 01472 _StringToIPAddress:
               01473 ;       .line   330; TCPIP_Stack/Helpers.c      BOOL StringToIPAddress(BYTE* str, IP_ADDR* IPAddress)
0000 CFD9 FFE5 01474         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01475         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01476         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01477         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01478         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01479         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01480         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01481         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01482         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01483         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01484         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01485         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01486         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01487         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01488         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 01489         MOVFF   r0x0d, POSTDEC1
0040 0E02      01490         MOVLW   0x02
0042 CFDB F000 01491         MOVFF   PLUSW2, r0x00
0046 0E03      01492         MOVLW   0x03
0048 CFDB F000 01493         MOVFF   PLUSW2, r0x01
004C 0E04      01494         MOVLW   0x04
004E CFDB F000 01495         MOVFF   PLUSW2, r0x02
0052 0E05      01496         MOVLW   0x05
0054 CFDB F000 01497         MOVFF   PLUSW2, r0x03
0058 0E06      01498         MOVLW   0x06
005A CFDB F000 01499         MOVFF   PLUSW2, r0x04
005E 0E07      01500         MOVLW   0x07
0060 CFDB F000 01501         MOVFF   PLUSW2, r0x05
               01502 ;       .line   335; TCPIP_Stack/Helpers.c      charLen = 0;
0064 6A00      01503         CLRF    r0x06
               01504 ;       .line   336; TCPIP_Stack/Helpers.c      currentOctet = 0;
0066 6A00      01505         CLRF    r0x07
0068 0000      01506         BANKSEL _StringToIPAddress_dwVal_1_1
               01507 ;       .line   337; TCPIP_Stack/Helpers.c      dwVal.Val = 0;
006A 6B00      01508         CLRF    _StringToIPAddress_dwVal_1_1, B
006C 0000      01509         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
006E 6B00      01510         CLRF    (_StringToIPAddress_dwVal_1_1 + 1), B
0070 0000      01511         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
0072 6B00      01512         CLRF    (_StringToIPAddress_dwVal_1_1 + 2), B
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0074 0000      01513         BANKSEL (_StringToIPAddress_dwVal_1_1 + 3)
0076 6B00      01514         CLRF    (_StringToIPAddress_dwVal_1_1 + 3), B
0078 01515 _00161_DS_:
               01516 ;       .line   338; TCPIP_Stack/Helpers.c      while((i = *str++))
0078 C000 FFE9 01517         MOVFF   r0x00, FSR0L
007C C000 FFF3 01518         MOVFF   r0x01, PRODL
0080 5000      01519         MOVF    r0x02, W
0082 EC00 F000 01520         CALL    __gptrget1
0086 6E00      01521         MOVWF   r0x08
0088 2A00      01522         INCF    r0x00, F
008A B0D8      01523         BTFSC   STATUS, 0
008C 2A00      01524         INCF    r0x01, F
008E B0D8      01525         BTFSC   STATUS, 0
0090 2A00      01526         INCF    r0x02, F
0092 C000 F000 01527         MOVFF   r0x08, r0x09
0096 5000      01528         MOVF    r0x08, W
0098 B4D8      01529         BTFSC   STATUS, 2
009A D000      01530         BRA     _00163_DS_
               01531 ;       .line   340; TCPIP_Stack/Helpers.c      if(currentOctet > 3u)
009C C000 F000 01532         MOVFF   r0x07, r0x08
00A0 6A00      01533         CLRF    r0x0a
00A2 0E00      01534         MOVLW   0x00
00A4 5C00      01535         SUBWF   r0x0a, W
00A6 E100      01536         BNZ     _00193_DS_
00A8 0E04      01537         MOVLW   0x04
00AA 5C00      01538         SUBWF   r0x08, W
00AC 01539 _00193_DS_:
00AC B0D8      01540         BTFSC   STATUS, 0
00AE D000      01541         BRA     _00163_DS_
               01542 ;       .line   343; TCPIP_Stack/Helpers.c      i -= '0';
00B0 0ED0      01543         MOVLW   0xd0
00B2 2600      01544         ADDWF   r0x09, F
               01545 ;       .line   347; TCPIP_Stack/Helpers.c      if(charLen == 0u)
00B4 5000      01546         MOVF    r0x06, W
00B6 E100      01547         BNZ     _00159_DS_
               01548 ;       .line   349; TCPIP_Stack/Helpers.c      if(i > 9u)
00B8 C000 F000 01549         MOVFF   r0x09, r0x08
00BC 6A00      01550         CLRF    r0x0a
00BE 0E00      01551         MOVLW   0x00
00C0 5C00      01552         SUBWF   r0x0a, W
00C2 E100      01553         BNZ     _00194_DS_
00C4 0E0A      01554         MOVLW   0x0a
00C6 5C00      01555         SUBWF   r0x08, W
00C8 01556 _00194_DS_:
00C8 A0D8      01557         BTFSS   STATUS, 0
00CA D000      01558         BRA     _00160_DS_
               01559 ;       .line   350; TCPIP_Stack/Helpers.c      return FALSE;
00CC 6AE8      01560         CLRF    WREG
00CE D000      01561         BRA     _00173_DS_
00D0 01562 _00159_DS_:
               01563 ;       .line   352; TCPIP_Stack/Helpers.c      else if(charLen == 3u)
00D0 C000 F000 01564         MOVFF   r0x06, r0x08
00D4 6A00      01565         CLRF    r0x0a
00D6 5000      01566         MOVF    r0x08, W
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00D8 0A03      01567         XORLW   0x03
00DA E100      01568         BNZ     _00195_DS_
00DC 5000      01569         MOVF    r0x0a, W
00DE E000      01570         BZ      _00196_DS_
00E0 01571 _00195_DS_:
00E0 D000      01572         BRA     _00156_DS_
00E2 01573 _00196_DS_:
               01574 ;       .line   354; TCPIP_Stack/Helpers.c      if(i != (BYTE)('.' - '0'))
00E2 5000      01575         MOVF    r0x09, W
00E4 0AFE      01576         XORLW   0xfe
00E6 E000      01577         BZ      _00146_DS_
               01578 ;       .line   355; TCPIP_Stack/Helpers.c      return FALSE;
00E8 6AE8      01579         CLRF    WREG
00EA D000      01580         BRA     _00173_DS_
00EC 01581 _00146_DS_:
               01582 ;       .line   357; TCPIP_Stack/Helpers.c      if(dwVal.Val > 0x00020505ul)
00EC 0E00      01583         MOVLW   0x00
00EE 0000      01584         BANKSEL (_StringToIPAddress_dwVal_1_1 + 3)
00F0 5D00      01585         SUBWF   (_StringToIPAddress_dwVal_1_1 + 3), W, B
00F2 E100      01586         BNZ     _00199_DS_
00F4 0E02      01587         MOVLW   0x02
00F6 0000      01588         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
00F8 5D00      01589         SUBWF   (_StringToIPAddress_dwVal_1_1 + 2), W, B
00FA E100      01590         BNZ     _00199_DS_
00FC 0E05      01591         MOVLW   0x05
00FE 0000      01592         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
0100 5D00      01593         SUBWF   (_StringToIPAddress_dwVal_1_1 + 1), W, B
0102 E100      01594         BNZ     _00199_DS_
0104 0E06      01595         MOVLW   0x06
0106 0000      01596         BANKSEL _StringToIPAddress_dwVal_1_1
0108 5D00      01597         SUBWF   _StringToIPAddress_dwVal_1_1, W, B
010A 01598 _00199_DS_:
010A E300      01599         BNC     _00148_DS_
               01600 ;       .line   358; TCPIP_Stack/Helpers.c      return FALSE;
010C 6AE8      01601         CLRF    WREG
010E D000      01602         BRA     _00173_DS_
0110 01603 _00148_DS_:
               01604 ;       .line   360; TCPIP_Stack/Helpers.c      IPAddress->v[currentOctet++] = dwVal.v[2]*((BYTE)100) + dwVal.v[1]*((BYTE)10) + dwVal.v[0];
0110 C000 F000 01605         MOVFF   r0x07, r0x08
0114 2A00      01606         INCF    r0x07, F
0116 6A00      01607         CLRF    r0x0a
0118 6A00      01608         CLRF    r0x0b
011A 5000      01609         MOVF    r0x03, W
011C 2600      01610         ADDWF   r0x08, F
011E 5000      01611         MOVF    r0x04, W
0120 2200      01612         ADDWFC  r0x0a, F
0122 5000      01613         MOVF    r0x05, W
0124 2200      01614         ADDWFC  r0x0b, F
               01615 ; ;multiply lit val:0x64 by variable (_StringToIPAddress_dwVal_1_1 + 2) and store in r0x0c
               01616 ; ;Unrolled 8 X 8 multiplication
               01617 ; ;FIXME: the function does not support result==WREG
0126 0000      01618         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
0128 5100      01619         MOVF    (_StringToIPAddress_dwVal_1_1 + 2), W, B
012A 0D64      01620         MULLW   0x64
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
012C CFF3 F000 01621         MOVFF   PRODL, r0x0c
               01622 ; ;multiply lit val:0x0a by variable (_StringToIPAddress_dwVal_1_1 + 1) and store in r0x0d
               01623 ; ;Unrolled 8 X 8 multiplication
               01624 ; ;FIXME: the function does not support result==WREG
0130 0000      01625         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
0132 5100      01626         MOVF    (_StringToIPAddress_dwVal_1_1 + 1), W, B
0134 0D0A      01627         MULLW   0x0a
0136 CFF3 F000 01628         MOVFF   PRODL, r0x0d
013A 5000      01629         MOVF    r0x0d, W
013C 2600      01630         ADDWF   r0x0c, F
013E 0000      01631         BANKSEL _StringToIPAddress_dwVal_1_1
0140 5100      01632         MOVF    _StringToIPAddress_dwVal_1_1, W, B
0142 2600      01633         ADDWF   r0x0c, F
0144 C000 FFE5 01634         MOVFF   r0x0c, POSTDEC1
0148 C000 FFE9 01635         MOVFF   r0x08, FSR0L
014C C000 FFF3 01636         MOVFF   r0x0a, PRODL
0150 5000      01637         MOVF    r0x0b, W
0152 EC00 F000 01638         CALL    __gptrput1
               01639 ;       .line   361; TCPIP_Stack/Helpers.c      charLen = 0;
0156 6A00      01640         CLRF    r0x06
0158 0000      01641         BANKSEL _StringToIPAddress_dwVal_1_1
               01642 ;       .line   362; TCPIP_Stack/Helpers.c      dwVal.Val = 0;
015A 6B00      01643         CLRF    _StringToIPAddress_dwVal_1_1, B
015C 0000      01644         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
015E 6B00      01645         CLRF    (_StringToIPAddress_dwVal_1_1 + 1), B
0160 0000      01646         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
0162 6B00      01647         CLRF    (_StringToIPAddress_dwVal_1_1 + 2), B
0164 0000      01648         BANKSEL (_StringToIPAddress_dwVal_1_1 + 3)
0166 6B00      01649         CLRF    (_StringToIPAddress_dwVal_1_1 + 3), B
               01650 ;       .line   363; TCPIP_Stack/Helpers.c      continue;
0168 D000      01651         BRA     _00161_DS_
016A 01652 _00156_DS_:
               01653 ;       .line   367; TCPIP_Stack/Helpers.c      if(i == (BYTE)('.' - '0'))
016A 5000      01654         MOVF    r0x09, W
016C 0AFE      01655         XORLW   0xfe
016E E000      01656         BZ      _00201_DS_
0170 D000      01657         BRA     _00152_DS_
0172 01658 _00201_DS_:
               01659 ;       .line   369; TCPIP_Stack/Helpers.c      if(dwVal.Val > 0x00020505ul)
0172 0E00      01660         MOVLW   0x00
0174 0000      01661         BANKSEL (_StringToIPAddress_dwVal_1_1 + 3)
0176 5D00      01662         SUBWF   (_StringToIPAddress_dwVal_1_1 + 3), W, B
0178 E100      01663         BNZ     _00202_DS_
017A 0E02      01664         MOVLW   0x02
017C 0000      01665         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
017E 5D00      01666         SUBWF   (_StringToIPAddress_dwVal_1_1 + 2), W, B
0180 E100      01667         BNZ     _00202_DS_
0182 0E05      01668         MOVLW   0x05
0184 0000      01669         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
0186 5D00      01670         SUBWF   (_StringToIPAddress_dwVal_1_1 + 1), W, B
0188 E100      01671         BNZ     _00202_DS_
018A 0E06      01672         MOVLW   0x06
018C 0000      01673         BANKSEL _StringToIPAddress_dwVal_1_1
018E 5D00      01674         SUBWF   _StringToIPAddress_dwVal_1_1, W, B
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0190 01675 _00202_DS_:
0190 E300      01676         BNC     _00150_DS_
               01677 ;       .line   370; TCPIP_Stack/Helpers.c      return FALSE;
0192 6AE8      01678         CLRF    WREG
0194 D000      01679         BRA     _00173_DS_
0196 01680 _00150_DS_:
               01681 ;       .line   372; TCPIP_Stack/Helpers.c      IPAddress->v[currentOctet++] = dwVal.v[2]*((BYTE)100) + dwVal.v[1]*((BYTE)10) + dwVal.v[0];
0196 C000 F000 01682         MOVFF   r0x07, r0x08
019A 2A00      01683         INCF    r0x07, F
019C 6A00      01684         CLRF    r0x0a
019E 6A00      01685         CLRF    r0x0b
01A0 5000      01686         MOVF    r0x03, W
01A2 2600      01687         ADDWF   r0x08, F
01A4 5000      01688         MOVF    r0x04, W
01A6 2200      01689         ADDWFC  r0x0a, F
01A8 5000      01690         MOVF    r0x05, W
01AA 2200      01691         ADDWFC  r0x0b, F
               01692 ; ;multiply lit val:0x64 by variable (_StringToIPAddress_dwVal_1_1 + 2) and store in r0x0c
               01693 ; ;Unrolled 8 X 8 multiplication
               01694 ; ;FIXME: the function does not support result==WREG
01AC 0000      01695         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
01AE 5100      01696         MOVF    (_StringToIPAddress_dwVal_1_1 + 2), W, B
01B0 0D64      01697         MULLW   0x64
01B2 CFF3 F000 01698         MOVFF   PRODL, r0x0c
               01699 ; ;multiply lit val:0x0a by variable (_StringToIPAddress_dwVal_1_1 + 1) and store in r0x0d
               01700 ; ;Unrolled 8 X 8 multiplication
               01701 ; ;FIXME: the function does not support result==WREG
01B6 0000      01702         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
01B8 5100      01703         MOVF    (_StringToIPAddress_dwVal_1_1 + 1), W, B
01BA 0D0A      01704         MULLW   0x0a
01BC CFF3 F000 01705         MOVFF   PRODL, r0x0d
01C0 5000      01706         MOVF    r0x0d, W
01C2 2600      01707         ADDWF   r0x0c, F
01C4 0000      01708         BANKSEL _StringToIPAddress_dwVal_1_1
01C6 5100      01709         MOVF    _StringToIPAddress_dwVal_1_1, W, B
01C8 2600      01710         ADDWF   r0x0c, F
01CA C000 FFE5 01711         MOVFF   r0x0c, POSTDEC1
01CE C000 FFE9 01712         MOVFF   r0x08, FSR0L
01D2 C000 FFF3 01713         MOVFF   r0x0a, PRODL
01D6 5000      01714         MOVF    r0x0b, W
01D8 EC00 F000 01715         CALL    __gptrput1
               01716 ;       .line   373; TCPIP_Stack/Helpers.c      charLen = 0;
01DC 6A00      01717         CLRF    r0x06
01DE 0000      01718         BANKSEL _StringToIPAddress_dwVal_1_1
               01719 ;       .line   374; TCPIP_Stack/Helpers.c      dwVal.Val = 0;
01E0 6B00      01720         CLRF    _StringToIPAddress_dwVal_1_1, B
01E2 0000      01721         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
01E4 6B00      01722         CLRF    (_StringToIPAddress_dwVal_1_1 + 1), B
01E6 0000      01723         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
01E8 6B00      01724         CLRF    (_StringToIPAddress_dwVal_1_1 + 2), B
01EA 0000      01725         BANKSEL (_StringToIPAddress_dwVal_1_1 + 3)
01EC 6B00      01726         CLRF    (_StringToIPAddress_dwVal_1_1 + 3), B
               01727 ;       .line   375; TCPIP_Stack/Helpers.c      continue;
01EE D000      01728         BRA     _00161_DS_
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01F0 01729 _00152_DS_:
               01730 ;       .line   377; TCPIP_Stack/Helpers.c      if(i > 9u)
01F0 C000 F000 01731         MOVFF   r0x09, r0x08
01F4 6A00      01732         CLRF    r0x0a
01F6 0E00      01733         MOVLW   0x00
01F8 5C00      01734         SUBWF   r0x0a, W
01FA E100      01735         BNZ     _00203_DS_
01FC 0E0A      01736         MOVLW   0x0a
01FE 5C00      01737         SUBWF   r0x08, W
0200 01738 _00203_DS_:
0200 E300      01739         BNC     _00160_DS_
               01740 ;       .line   378; TCPIP_Stack/Helpers.c      return FALSE;
0202 6AE8      01741         CLRF    WREG
0204 D000      01742         BRA     _00173_DS_
0206 01743 _00160_DS_:
               01744 ;       .line   381; TCPIP_Stack/Helpers.c      charLen++;
0206 2A00      01745         INCF    r0x06, F
0208 0000      01746         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
               01747 ;       .line   382; TCPIP_Stack/Helpers.c      dwVal.Val <<= 8;
020A 5100      01748         MOVF    (_StringToIPAddress_dwVal_1_1 + 2), W, B
020C 6E00      01749         MOVWF   r0x0c
020E 0000      01750         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
0210 5100      01751         MOVF    (_StringToIPAddress_dwVal_1_1 + 1), W, B
0212 6E00      01752         MOVWF   r0x0b
0214 0000      01753         BANKSEL _StringToIPAddress_dwVal_1_1
0216 5100      01754         MOVF    _StringToIPAddress_dwVal_1_1, W, B
0218 6E00      01755         MOVWF   r0x0a
021A 6A00      01756         CLRF    r0x08
021C 5000      01757         MOVF    r0x08, W
021E 0000      01758         BANKSEL _StringToIPAddress_dwVal_1_1
0220 6F00      01759         MOVWF   _StringToIPAddress_dwVal_1_1, B
0222 5000      01760         MOVF    r0x0a, W
0224 0000      01761         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
0226 6F00      01762         MOVWF   (_StringToIPAddress_dwVal_1_1 + 1), B
0228 5000      01763         MOVF    r0x0b, W
022A 0000      01764         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
022C 6F00      01765         MOVWF   (_StringToIPAddress_dwVal_1_1 + 2), B
022E 5000      01766         MOVF    r0x0c, W
0230 0000      01767         BANKSEL (_StringToIPAddress_dwVal_1_1 + 3)
0232 6F00      01768         MOVWF   (_StringToIPAddress_dwVal_1_1 + 3), B
               01769 ;       .line   383; TCPIP_Stack/Helpers.c      dwVal.v[0] = i;
0234 5000      01770         MOVF    r0x09, W
0236 0000      01771         BANKSEL _StringToIPAddress_dwVal_1_1
0238 6F00      01772         MOVWF   _StringToIPAddress_dwVal_1_1, B
023A D000      01773         BRA     _00161_DS_
023C 01774 _00163_DS_:
               01775 ;       .line   389; TCPIP_Stack/Helpers.c      if(i != 0u && i != (int)'/' && i != (int)'\r' && i != (int)'\n' && i !=(int) ' ' && i != (int)'\t')
023C 5000      01776         MOVF    r0x09, W
023E E000      01777         BZ      _00165_DS_
0240 C000 F000 01778         MOVFF   r0x09, r0x00
0244 6A00      01779         CLRF    r0x01
0246 5000      01780         MOVF    r0x00, W
0248 0A2F      01781         XORLW   0x2f
024A E100      01782         BNZ     _00205_DS_
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
024C 5000      01783         MOVF    r0x01, W
024E E000      01784         BZ      _00165_DS_
0250 01785 _00205_DS_:
0250 5000      01786         MOVF    r0x00, W
0252 0A0D      01787         XORLW   0x0d
0254 E100      01788         BNZ     _00207_DS_
0256 5000      01789         MOVF    r0x01, W
0258 E000      01790         BZ      _00165_DS_
025A 01791 _00207_DS_:
025A 5000      01792         MOVF    r0x00, W
025C 0A0A      01793         XORLW   0x0a
025E E100      01794         BNZ     _00209_DS_
0260 5000      01795         MOVF    r0x01, W
0262 E000      01796         BZ      _00165_DS_
0264 01797 _00209_DS_:
0264 5000      01798         MOVF    r0x00, W
0266 0A20      01799         XORLW   0x20
0268 E100      01800         BNZ     _00211_DS_
026A 5000      01801         MOVF    r0x01, W
026C E000      01802         BZ      _00165_DS_
026E 01803 _00211_DS_:
026E 5000      01804         MOVF    r0x00, W
0270 0A09      01805         XORLW   0x09
0272 E100      01806         BNZ     _00213_DS_
0274 5000      01807         MOVF    r0x01, W
0276 E000      01808         BZ      _00165_DS_
0278 01809 _00213_DS_:
               01810 ;       .line   390; TCPIP_Stack/Helpers.c      return FALSE;
0278 6AE8      01811         CLRF    WREG
027A D000      01812         BRA     _00173_DS_
027C 01813 _00165_DS_:
               01814 ;       .line   393; TCPIP_Stack/Helpers.c      if(dwVal.Val > 0x00020505ul)
027C 0E00      01815         MOVLW   0x00
027E 0000      01816         BANKSEL (_StringToIPAddress_dwVal_1_1 + 3)
0280 5D00      01817         SUBWF   (_StringToIPAddress_dwVal_1_1 + 3), W, B
0282 E100      01818         BNZ     _00214_DS_
0284 0E02      01819         MOVLW   0x02
0286 0000      01820         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
0288 5D00      01821         SUBWF   (_StringToIPAddress_dwVal_1_1 + 2), W, B
028A E100      01822         BNZ     _00214_DS_
028C 0E05      01823         MOVLW   0x05
028E 0000      01824         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
0290 5D00      01825         SUBWF   (_StringToIPAddress_dwVal_1_1 + 1), W, B
0292 E100      01826         BNZ     _00214_DS_
0294 0E06      01827         MOVLW   0x06
0296 0000      01828         BANKSEL _StringToIPAddress_dwVal_1_1
0298 5D00      01829         SUBWF   _StringToIPAddress_dwVal_1_1, W, B
029A 01830 _00214_DS_:
029A E300      01831         BNC     _00172_DS_
               01832 ;       .line   394; TCPIP_Stack/Helpers.c      return FALSE;
029C 6AE8      01833         CLRF    WREG
029E D000      01834         BRA     _00173_DS_
02A0 01835 _00172_DS_:
               01836 ;       .line   396; TCPIP_Stack/Helpers.c      IPAddress->v[3] = dwVal.v[2]*((BYTE)100) + dwVal.v[1]*((BYTE)10) + dwVal.v[0];
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
02A0 0E03      01837         MOVLW   0x03
02A2 2600      01838         ADDWF   r0x03, F
02A4 0E00      01839         MOVLW   0x00
02A6 2200      01840         ADDWFC  r0x04, F
02A8 0E00      01841         MOVLW   0x00
02AA 2200      01842         ADDWFC  r0x05, F
               01843 ; ;multiply lit val:0x64 by variable (_StringToIPAddress_dwVal_1_1 + 2) and store in r0x00
               01844 ; ;Unrolled 8 X 8 multiplication
               01845 ; ;FIXME: the function does not support result==WREG
02AC 0000      01846         BANKSEL (_StringToIPAddress_dwVal_1_1 + 2)
02AE 5100      01847         MOVF    (_StringToIPAddress_dwVal_1_1 + 2), W, B
02B0 0D64      01848         MULLW   0x64
02B2 CFF3 F000 01849         MOVFF   PRODL, r0x00
               01850 ; ;multiply lit val:0x0a by variable (_StringToIPAddress_dwVal_1_1 + 1) and store in r0x01
               01851 ; ;Unrolled 8 X 8 multiplication
               01852 ; ;FIXME: the function does not support result==WREG
02B6 0000      01853         BANKSEL (_StringToIPAddress_dwVal_1_1 + 1)
02B8 5100      01854         MOVF    (_StringToIPAddress_dwVal_1_1 + 1), W, B
02BA 0D0A      01855         MULLW   0x0a
02BC CFF3 F000 01856         MOVFF   PRODL, r0x01
02C0 5000      01857         MOVF    r0x01, W
02C2 2600      01858         ADDWF   r0x00, F
02C4 0000      01859         BANKSEL _StringToIPAddress_dwVal_1_1
02C6 5100      01860         MOVF    _StringToIPAddress_dwVal_1_1, W, B
02C8 2600      01861         ADDWF   r0x00, F
02CA C000 FFE5 01862         MOVFF   r0x00, POSTDEC1
02CE C000 FFE9 01863         MOVFF   r0x03, FSR0L
02D2 C000 FFF3 01864         MOVFF   r0x04, PRODL
02D6 5000      01865         MOVF    r0x05, W
02D8 EC00 F000 01866         CALL    __gptrput1
               01867 ;       .line   398; TCPIP_Stack/Helpers.c      return TRUE;
02DC 0E01      01868         MOVLW   0x01
02DE 01869 _00173_DS_:
02DE CFE4 F000 01870         MOVFF   PREINC1, r0x0d
02E2 CFE4 F000 01871         MOVFF   PREINC1, r0x0c
02E6 CFE4 F000 01872         MOVFF   PREINC1, r0x0b
02EA CFE4 F000 01873         MOVFF   PREINC1, r0x0a
02EE CFE4 F000 01874         MOVFF   PREINC1, r0x09
02F2 CFE4 F000 01875         MOVFF   PREINC1, r0x08
02F6 CFE4 F000 01876         MOVFF   PREINC1, r0x07
02FA CFE4 F000 01877         MOVFF   PREINC1, r0x06
02FE CFE4 F000 01878         MOVFF   PREINC1, r0x05
0302 CFE4 F000 01879         MOVFF   PREINC1, r0x04
0306 CFE4 F000 01880         MOVFF   PREINC1, r0x03
030A CFE4 F000 01881         MOVFF   PREINC1, r0x02
030E CFE4 F000 01882         MOVFF   PREINC1, r0x01
0312 CFE4 F000 01883         MOVFF   PREINC1, r0x00
0316 CFE4 FFD9 01884         MOVFF   PREINC1, FSR2L
031A 0012      01885         RETURN  
               01886 
               01887 ; ; Starting pCode block
               01888 S_Helpers__GenerateRandomDWORD  code
0000 01889 _GenerateRandomDWORD:
               01890 ;       .line   106; TCPIP_Stack/Helpers.c      DWORD GenerateRandomDWORD(void)
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0000 CFD9 FFE5 01891         MOVFF   FSR2L, POSTDEC1
0004 CFE1 FFD9 01892         MOVFF   FSR1L, FSR2L
0008 C000 FFE5 01893         MOVFF   r0x00, POSTDEC1
000C C000 FFE5 01894         MOVFF   r0x01, POSTDEC1
0010 C000 FFE5 01895         MOVFF   r0x02, POSTDEC1
0014 C000 FFE5 01896         MOVFF   r0x03, POSTDEC1
0018 C000 FFE5 01897         MOVFF   r0x04, POSTDEC1
001C C000 FFE5 01898         MOVFF   r0x05, POSTDEC1
0020 C000 FFE5 01899         MOVFF   r0x06, POSTDEC1
0024 C000 FFE5 01900         MOVFF   r0x07, POSTDEC1
0028 C000 FFE5 01901         MOVFF   r0x08, POSTDEC1
002C C000 FFE5 01902         MOVFF   r0x09, POSTDEC1
0030 C000 FFE5 01903         MOVFF   r0x0a, POSTDEC1
0034 C000 FFE5 01904         MOVFF   r0x0b, POSTDEC1
0038 C000 FFE5 01905         MOVFF   r0x0c, POSTDEC1
003C C000 FFE5 01906         MOVFF   r0x0d, POSTDEC1
0040 C000 FFE5 01907         MOVFF   r0x0e, POSTDEC1
0044 C000 FFE5 01908         MOVFF   r0x0f, POSTDEC1
0048 C000 FFE5 01909         MOVFF   r0x10, POSTDEC1
004C C000 FFE5 01910         MOVFF   r0x11, POSTDEC1
0050 C000 FFE5 01911         MOVFF   r0x12, POSTDEC1
0054 C000 FFE5 01912         MOVFF   r0x13, POSTDEC1
0058 C000 FFE5 01913         MOVFF   r0x14, POSTDEC1
005C C000 FFE5 01914         MOVFF   r0x15, POSTDEC1
0060 C000 FFE5 01915         MOVFF   r0x16, POSTDEC1
0064 C000 FFE5 01916         MOVFF   r0x17, POSTDEC1
0068 C000 FFE5 01917         MOVFF   r0x18, POSTDEC1
006C C000 FFE5 01918         MOVFF   r0x19, POSTDEC1
0070 C000 FFE5 01919         MOVFF   r0x1a, POSTDEC1
0074 C000 FFE5 01920         MOVFF   r0x1b, POSTDEC1
0078 C000 FFE5 01921         MOVFF   r0x1c, POSTDEC1
007C C000 FFE5 01922         MOVFF   r0x1d, POSTDEC1
               01923 ;       .line   119; TCPIP_Stack/Helpers.c      ADCON0Save = ADCON0;
0080 C000 F000 01924         MOVFF   _ADCON0, r0x00
               01925 ;       .line   120; TCPIP_Stack/Helpers.c      ADCON2Save = ADCON2;
0084 C000 F000 01926         MOVFF   _ADCON2, r0x01
               01927 ;       .line   121; TCPIP_Stack/Helpers.c      T0CONSave = T0CON;
0088 C000 F000 01928         MOVFF   _T0CON, r0x02
               01929 ;       .line   122; TCPIP_Stack/Helpers.c      TMR0LSave = TMR0L;
008C C000 F000 01930         MOVFF   _TMR0L, r0x03
               01931 ;       .line   123; TCPIP_Stack/Helpers.c      TMR0HSave = TMR0H;
0090 C000 F000 01932         MOVFF   _TMR0H, r0x04
               01933 ;       .line   126; TCPIP_Stack/Helpers.c      ADCON0 = 0x01;  // Turn on the A/D module
0094 0E01      01934         MOVLW   0x01
0096 6E00      01935         MOVWF   _ADCON0
               01936 ;       .line   127; TCPIP_Stack/Helpers.c      ADCON2 = 0x3F;  // 20 Tad acquisition, Frc A/D clock used for conversion
0098 0E3F      01937         MOVLW   0x3f
009A 6E00      01938         MOVWF   _ADCON2
               01939 ;       .line   128; TCPIP_Stack/Helpers.c      T0CON = 0x88;   // TMR0ON = 1, no prescalar
009C 0E88      01940         MOVLW   0x88
009E 6E00      01941         MOVWF   _T0CON
               01942 ;       .line   130; TCPIP_Stack/Helpers.c      dwTotalTime = 0;
00A0 6A00      01943         CLRF    r0x05
00A2 6A00      01944         CLRF    r0x06
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
00A4 6A00      01945         CLRF    r0x07
00A6 6A00      01946         CLRF    r0x08
               01947 ;       .line   131; TCPIP_Stack/Helpers.c      wLastValue = 0;
00A8 6A00      01948         CLRF    r0x09
00AA 6A00      01949         CLRF    r0x0a
               01950 ;       .line   132; TCPIP_Stack/Helpers.c      dwRandomResult = rand();
00AC EC00 F000 01951         CALL    _rand
00B0 6E00      01952         MOVWF   r0x0b
00B2 CFF3 F000 01953         MOVFF   PRODL, r0x0c
00B6 CFF4 F000 01954         MOVFF   PRODH, r0x0d
00BA CFE9 F000 01955         MOVFF   FSR0L, r0x0e
               01956 ;       .line   133; TCPIP_Stack/Helpers.c      while(1)
00BE 6A00      01957         CLRF    r0x0f
00C0 01958 _00120_DS_:
               01959 ;       .line   136; TCPIP_Stack/Helpers.c      TMR0H = 0x00;
00C0 6A00      01960         CLRF    _TMR0H
               01961 ;       .line   137; TCPIP_Stack/Helpers.c      TMR0L = 0x00;
00C2 6A00      01962         CLRF    _TMR0L
               01963 ;       .line   138; TCPIP_Stack/Helpers.c      ADCON0bits.GO = 1;
00C4 8200      01964         BSF     _ADCON0bits, 1
00C6 0004      01965         clrwdt 
00C8 01966 _00108_DS_:
               01967 ;       .line   140; TCPIP_Stack/Helpers.c      while(ADCON0bits.GO);
00C8 B200      01968         BTFSC   _ADCON0bits, 1
00CA D000      01969         BRA     _00108_DS_
               01970 ;       .line   141; TCPIP_Stack/Helpers.c      ((BYTE*)&wTime)[0] = TMR0L;
00CC 5000      01971         MOVF    _TMR0L, W
00CE 0000      01972         BANKSEL _GenerateRandomDWORD_wTime_1_1
00D0 6F00      01973         MOVWF   _GenerateRandomDWORD_wTime_1_1, B
               01974 ;       .line   142; TCPIP_Stack/Helpers.c      ((BYTE*)&wTime)[1] = TMR0H;
00D2 5000      01975         MOVF    _TMR0H, W
00D4 0000      01976         BANKSEL (_GenerateRandomDWORD_wTime_1_1 + 1)
00D6 6F00      01977         MOVWF   (_GenerateRandomDWORD_wTime_1_1 + 1), B
               01978 ;       .line   143; TCPIP_Stack/Helpers.c      w = rand();
00D8 EC00 F000 01979         CALL    _rand
00DC 6E00      01980         MOVWF   r0x10
00DE CFF3 F000 01981         MOVFF   PRODL, r0x11
00E2 CFF4 F000 01982         MOVFF   PRODH, r0x12
00E6 CFE9 F000 01983         MOVFF   FSR0L, r0x13
               01984 ;       .line   146; TCPIP_Stack/Helpers.c      dwTotalTime += wTime;
00EA C000 F000 01985         MOVFF   _GenerateRandomDWORD_wTime_1_1, r0x12
00EE C000 F000 01986         MOVFF   (_GenerateRandomDWORD_wTime_1_1 + 1), r0x13
00F2 6A00      01987         CLRF    r0x14
00F4 6A00      01988         CLRF    r0x15
00F6 5000      01989         MOVF    r0x12, W
00F8 2600      01990         ADDWF   r0x05, F
00FA 5000      01991         MOVF    r0x13, W
00FC 2200      01992         ADDWFC  r0x06, F
00FE 5000      01993         MOVF    r0x14, W
0100 2200      01994         ADDWFC  r0x07, F
0102 5000      01995         MOVF    r0x15, W
0104 2200      01996         ADDWFC  r0x08, F
               01997 ;       .line   147; TCPIP_Stack/Helpers.c      if(dwTotalTime >= GetInstructionClock())
0106 0E00      01998         MOVLW   0x00
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0108 5C00      01999         SUBWF   r0x08, W
010A E100      02000         BNZ     _00130_DS_
010C 0E9E      02001         MOVLW   0x9e
010E 5C00      02002         SUBWF   r0x07, W
0110 E100      02003         BNZ     _00130_DS_
0112 0EF2      02004         MOVLW   0xf2
0114 5C00      02005         SUBWF   r0x06, W
0116 E100      02006         BNZ     _00130_DS_
0118 0E1A      02007         MOVLW   0x1a
011A 5C00      02008         SUBWF   r0x05, W
011C 02009 _00130_DS_:
011C A0D8      02010         BTFSS   STATUS, 0
011E D000      02011         BRA     _00112_DS_
               02012 ;       .line   149; TCPIP_Stack/Helpers.c      dwRandomResult ^= rand() | (((DWORD)rand())<<15ul) | (((DWORD)rand())<<30ul);
0120 EC00 F000 02013         CALL    _rand
0124 6E00      02014         MOVWF   r0x12
0126 CFF3 F000 02015         MOVFF   PRODL, r0x13
012A CFF4 F000 02016         MOVFF   PRODH, r0x14
012E CFE9 F000 02017         MOVFF   FSR0L, r0x15
0132 EC00 F000 02018         CALL    _rand
0136 6E00      02019         MOVWF   r0x16
0138 CFF3 F000 02020         MOVFF   PRODL, r0x17
013C CFF4 F000 02021         MOVFF   PRODH, r0x18
0140 CFE9 F000 02022         MOVFF   FSR0L, r0x19
0144 3000      02023         RRCF    r0x18, W
0146 3000      02024         RRCF    r0x17, W
0148 6E00      02025         MOVWF   r0x1d
014A 6A00      02026         CLRF    r0x1c
014C 3200      02027         RRCF    r0x1c, F
014E 4000      02028         RRNCF   r0x16, W
0150 0B80      02029         ANDLW   0x80
0152 6E00      02030         MOVWF   r0x1b
0154 5000      02031         MOVF    r0x16, W
0156 40E8      02032         RRNCF   WREG, W
0158 0B7F      02033         ANDLW   0x7f
015A 1200      02034         IORWF   r0x1c, F
015C 6A00      02035         CLRF    r0x1a
015E 5000      02036         MOVF    r0x1a, W
0160 1200      02037         IORWF   r0x12, F
0162 5000      02038         MOVF    r0x1b, W
0164 1200      02039         IORWF   r0x13, F
0166 5000      02040         MOVF    r0x1c, W
0168 1200      02041         IORWF   r0x14, F
016A 5000      02042         MOVF    r0x1d, W
016C 1200      02043         IORWF   r0x15, F
016E EC00 F000 02044         CALL    _rand
0172 6E00      02045         MOVWF   r0x16
0174 CFF3 F000 02046         MOVFF   PRODL, r0x17
0178 CFF4 F000 02047         MOVFF   PRODH, r0x18
017C CFE9 F000 02048         MOVFF   FSR0L, r0x19
0180 4000      02049         RRNCF   r0x16, W
0182 40E8      02050         RRNCF   WREG, W
0184 0BC0      02051         ANDLW   0xc0
0186 6E00      02052         MOVWF   r0x1d
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0188 6A00      02053         CLRF    r0x1a
018A 6A00      02054         CLRF    r0x1b
018C 6A00      02055         CLRF    r0x1c
018E 5000      02056         MOVF    r0x1a, W
0190 1200      02057         IORWF   r0x12, F
0192 5000      02058         MOVF    r0x1b, W
0194 1200      02059         IORWF   r0x13, F
0196 5000      02060         MOVF    r0x1c, W
0198 1200      02061         IORWF   r0x14, F
019A 5000      02062         MOVF    r0x1d, W
019C 1200      02063         IORWF   r0x15, F
019E 5000      02064         MOVF    r0x12, W
01A0 1A00      02065         XORWF   r0x0b, F
01A2 5000      02066         MOVF    r0x13, W
01A4 1A00      02067         XORWF   r0x0c, F
01A6 5000      02068         MOVF    r0x14, W
01A8 1A00      02069         XORWF   r0x0d, F
01AA 5000      02070         MOVF    r0x15, W
01AC 1A00      02071         XORWF   r0x0e, F
               02072 ;       .line   150; TCPIP_Stack/Helpers.c      break;
01AE D000      02073         BRA     _00121_DS_
01B0 02074 _00112_DS_:
               02075 ;       .line   154; TCPIP_Stack/Helpers.c      if(wLastValue == wTime)
01B0 5000      02076         MOVF    r0x09, W
01B2 0000      02077         BANKSEL _GenerateRandomDWORD_wTime_1_1
01B4 1900      02078         XORWF   _GenerateRandomDWORD_wTime_1_1, W, B
01B6 E100      02079         BNZ     _00135_DS_
01B8 5000      02080         MOVF    r0x0a, W
01BA 0000      02081         BANKSEL (_GenerateRandomDWORD_wTime_1_1 + 1)
01BC 1900      02082         XORWF   (_GenerateRandomDWORD_wTime_1_1 + 1), W, B
01BE E100      02083         BNZ     _00135_DS_
01C0 D000      02084         BRA     _00120_DS_
01C2 02085 _00135_DS_:
01C2 0000      02086         BANKSEL _GenerateRandomDWORD_wTime_1_1
               02087 ;       .line   158; TCPIP_Stack/Helpers.c      srand(w + (wLastValue - wTime));
01C4 5100      02088         MOVF    _GenerateRandomDWORD_wTime_1_1, W, B
01C6 5C00      02089         SUBWF   r0x09, W
01C8 6E00      02090         MOVWF   r0x12
01CA 0000      02091         BANKSEL (_GenerateRandomDWORD_wTime_1_1 + 1)
01CC 5100      02092         MOVF    (_GenerateRandomDWORD_wTime_1_1 + 1), W, B
01CE 5800      02093         SUBWFB  r0x0a, W
01D0 6E00      02094         MOVWF   r0x13
01D2 5000      02095         MOVF    r0x12, W
01D4 2600      02096         ADDWF   r0x10, F
01D6 5000      02097         MOVF    r0x13, W
01D8 2200      02098         ADDWFC  r0x11, F
01DA 6A00      02099         CLRF    r0x12
01DC 6A00      02100         CLRF    r0x13
01DE 5000      02101         MOVF    r0x13, W
01E0 6EE5      02102         MOVWF   POSTDEC1
01E2 5000      02103         MOVF    r0x12, W
01E4 6EE5      02104         MOVWF   POSTDEC1
01E6 5000      02105         MOVF    r0x11, W
01E8 6EE5      02106         MOVWF   POSTDEC1
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
01EA 5000      02107         MOVF    r0x10, W
01EC 6EE5      02108         MOVWF   POSTDEC1
01EE EC00 F000 02109         CALL    _srand
01F2 0E04      02110         MOVLW   0x04
01F4 26E1      02111         ADDWF   FSR1L, F
               02112 ;       .line   159; TCPIP_Stack/Helpers.c      wLastValue = wTime;
01F6 C000 F000 02113         MOVFF   _GenerateRandomDWORD_wTime_1_1, r0x09
01FA C000 F000 02114         MOVFF   (_GenerateRandomDWORD_wTime_1_1 + 1), r0x0a
               02115 ;       .line   162; TCPIP_Stack/Helpers.c      dwRandomResult <<= 1;
01FE 5000      02116         MOVF    r0x0b, W
0200 2600      02117         ADDWF   r0x0b, F
0202 3600      02118         RLCF    r0x0c, F
0204 3600      02119         RLCF    r0x0d, F
0206 3600      02120         RLCF    r0x0e, F
               02121 ;       .line   163; TCPIP_Stack/Helpers.c      if(rand() >= 16384)
0208 EC00 F000 02122         CALL    _rand
020C 6E00      02123         MOVWF   r0x10
020E CFF3 F000 02124         MOVFF   PRODL, r0x11
0212 CFF4 F000 02125         MOVFF   PRODH, r0x12
0216 CFE9 F000 02126         MOVFF   FSR0L, r0x13
021A 5000      02127         MOVF    r0x13, W
021C 0F80      02128         ADDLW   0x80
021E 0F80      02129         ADDLW   0x80
0220 E100      02130         BNZ     _00136_DS_
0222 0E00      02131         MOVLW   0x00
0224 5C00      02132         SUBWF   r0x12, W
0226 E100      02133         BNZ     _00136_DS_
0228 0E40      02134         MOVLW   0x40
022A 5C00      02135         SUBWF   r0x11, W
022C E100      02136         BNZ     _00136_DS_
022E 0E00      02137         MOVLW   0x00
0230 5C00      02138         SUBWF   r0x10, W
0232 02139 _00136_DS_:
0232 E300      02140         BNC     _00116_DS_
               02141 ;       .line   164; TCPIP_Stack/Helpers.c      dwRandomResult |= 0x1;
0234 8000      02142         BSF     r0x0b, 0
0236 02143 _00116_DS_:
               02144 ;       .line   167; TCPIP_Stack/Helpers.c      if(++vBitCount == 0u)
0236 2A00      02145         INCF    r0x0f, F
0238 5000      02146         MOVF    r0x0f, W
023A A4D8      02147         BTFSS   STATUS, 2
023C D000      02148         BRA     _00120_DS_
023E 02149 _00121_DS_:
               02150 ;       .line   172; TCPIP_Stack/Helpers.c      ADCON0 = ADCON0Save;
023E C000 F000 02151         MOVFF   r0x00, _ADCON0
               02152 ;       .line   173; TCPIP_Stack/Helpers.c      ADCON2 = ADCON2Save;
0242 C000 F000 02153         MOVFF   r0x01, _ADCON2
               02154 ;       .line   174; TCPIP_Stack/Helpers.c      TMR0H = TMR0HSave;
0246 C000 F000 02155         MOVFF   r0x04, _TMR0H
               02156 ;       .line   175; TCPIP_Stack/Helpers.c      TMR0L = TMR0LSave;
024A C000 F000 02157         MOVFF   r0x03, _TMR0L
               02158 ;       .line   176; TCPIP_Stack/Helpers.c      T0CON = T0CONSave;
024E C000 F000 02159         MOVFF   r0x02, _T0CON
               02160 ;       .line   254; TCPIP_Stack/Helpers.c      return dwRandomResult;
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
0252 C000 FFE9 02161         MOVFF   r0x0e, FSR0L
0256 C000 FFF4 02162         MOVFF   r0x0d, PRODH
025A C000 FFF3 02163         MOVFF   r0x0c, PRODL
025E 5000      02164         MOVF    r0x0b, W
0260 CFE4 F000 02165         MOVFF   PREINC1, r0x1d
0264 CFE4 F000 02166         MOVFF   PREINC1, r0x1c
0268 CFE4 F000 02167         MOVFF   PREINC1, r0x1b
026C CFE4 F000 02168         MOVFF   PREINC1, r0x1a
0270 CFE4 F000 02169         MOVFF   PREINC1, r0x19
0274 CFE4 F000 02170         MOVFF   PREINC1, r0x18
0278 CFE4 F000 02171         MOVFF   PREINC1, r0x17
027C CFE4 F000 02172         MOVFF   PREINC1, r0x16
0280 CFE4 F000 02173         MOVFF   PREINC1, r0x15
0284 CFE4 F000 02174         MOVFF   PREINC1, r0x14
0288 CFE4 F000 02175         MOVFF   PREINC1, r0x13
028C CFE4 F000 02176         MOVFF   PREINC1, r0x12
0290 CFE4 F000 02177         MOVFF   PREINC1, r0x11
0294 CFE4 F000 02178         MOVFF   PREINC1, r0x10
0298 CFE4 F000 02179         MOVFF   PREINC1, r0x0f
029C CFE4 F000 02180         MOVFF   PREINC1, r0x0e
02A0 CFE4 F000 02181         MOVFF   PREINC1, r0x0d
02A4 CFE4 F000 02182         MOVFF   PREINC1, r0x0c
02A8 CFE4 F000 02183         MOVFF   PREINC1, r0x0b
02AC CFE4 F000 02184         MOVFF   PREINC1, r0x0a
02B0 CFE4 F000 02185         MOVFF   PREINC1, r0x09
02B4 CFE4 F000 02186         MOVFF   PREINC1, r0x08
02B8 CFE4 F000 02187         MOVFF   PREINC1, r0x07
02BC CFE4 F000 02188         MOVFF   PREINC1, r0x06
02C0 CFE4 F000 02189         MOVFF   PREINC1, r0x05
02C4 CFE4 F000 02190         MOVFF   PREINC1, r0x04
02C8 CFE4 F000 02191         MOVFF   PREINC1, r0x03
02CC CFE4 F000 02192         MOVFF   PREINC1, r0x02
02D0 CFE4 F000 02193         MOVFF   PREINC1, r0x01
02D4 CFE4 F000 02194         MOVFF   PREINC1, r0x00
02D8 CFE4 FFD9 02195         MOVFF   PREINC1, FSR2L
02DC 0012      02196         RETURN  
               02197 
               02198 
               02199 
               02200 ; Statistics:
               02201 ; code size:     3510 (0x0db6) bytes ( 2.68%)
               02202 ;                1755 (0x06db) words
               02203 ; udata size:      24 (0x0018) bytes ( 0.62%)
               02204 ; access size:     30 (0x001e) bytes
               02205 
               02206 
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00108_DS_                        000000C8
_00112_DS_                        000001B0
_00116_DS_                        00000236
_00120_DS_                        000000C0
_00121_DS_                        0000023E
_00130_DS_                        0000011C
_00135_DS_                        000001C2
_00136_DS_                        00000232
_00146_DS_                        000000EC
_00148_DS_                        00000110
_00150_DS_                        00000196
_00152_DS_                        000001F0
_00156_DS_                        0000016A
_00159_DS_                        000000D0
_00160_DS_                        00000206
_00161_DS_                        00000078
_00163_DS_                        0000023C
_00165_DS_                        0000027C
_00172_DS_                        000002A0
_00173_DS_                        000002DE
_00193_DS_                        000000AC
_00194_DS_                        000000C8
_00195_DS_                        000000E0
_00196_DS_                        000000E2
_00199_DS_                        0000010A
_00201_DS_                        00000172
_00202_DS_                        00000190
_00203_DS_                        00000200
_00205_DS_                        00000250
_00207_DS_                        0000025A
_00209_DS_                        00000264
_00211_DS_                        0000026E
_00213_DS_                        00000278
_00214_DS_                        0000029A
_00220_DS_                        00000058
_00222_DS_                        0000007A
_00224_DS_                        000000A0
_00225_DS_                        000000AA
_00227_DS_                        000000D0
_00228_DS_                        000000DA
_00235_DS_                        0000004C
_00236_DS_                        0000006E
_00237_DS_                        00000090
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_00238_DS_                        000000C0
_00245_DS_                        0000003A
_00246_DS_                        00000040
_00248_DS_                        00000030
_00255_DS_                        00000038
_00256_DS_                        0000003E
_00259_DS_                        0000002E
_00274_DS_                        000001D8
_00276_DS_                        00000244
_00278_DS_                        00000290
_00284_DS_                        00000056
_00288_DS_                        00000096
_00291_DS_                        000000B8
_00300_DS_                        00000066
_00301_DS_                        000000A4
_00302_DS_                        000000A4
_00308_DS_                        000000A0
_00311_DS_                        00000064
_00313_DS_                        000000C4
_00314_DS_                        000000CA
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_AN0String                        00000000
_AppConfig                        00000000
_BAUDCON                          00000000
_BAUDCON1                         00000000
_BAUDCON1bits                     00000000
_BAUDCON2                         00000000
_BAUDCON2bits                     00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTL1                         00000000
_BAUDCTL1bits                     00000000
_BAUDCTL2                         00000000
_BAUDCTL2bits                     00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCP3CON                          00000000
_CCP3CONbits                      00000000
_CCP4CON                          00000000
_CCP4CONbits                      00000000
_CCP5CON                          00000000
_CCP5CONbits                      00000000
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CCPR3                            00000000
_CCPR3H                           00000000
_CCPR3L                           00000000
_CCPR4                            00000000
_CCPR4H                           00000000
_CCPR4L                           00000000
_CCPR5                            00000000
_CCPR5H                           00000000
_CCPR5L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_CalcIPChecksum                   00000000
_CalcIPChecksum_count_1_1         00000000
_CalcIPChecksum_sum_1_1           00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_DDRF                             00000000
_DDRFbits                         00000000
_DDRG                             00000000
_DDRGbits                         00000000
_DDRH                             00000000
_DDRHbits                         00000000
_DDRJ                             00000000
_DDRJbits                         00000000
_EBSTCON                          00000000
_EBSTCONbits                      00000000
_EBSTCS                           00000000
_EBSTCSH                          00000000
_EBSTCSL                          00000000
_EBSTSD                           00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_ECCP2AS                          00000000
_ECCP2ASbits                      00000000
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_ECCP2CON                         00000000
_ECCP2CONbits                     00000000
_ECCP2DEL                         00000000
_ECCP2DELbits                     00000000
_ECCP3AS                          00000000
_ECCP3ASbits                      00000000
_ECCP3CON                         00000000
_ECCP3CONbits                     00000000
_ECCP3DEL                         00000000
_ECCP3DELbits                     00000000
_ECON1                            00000000
_ECON1bits                        00000000
_ECON2                            00000000
_ECON2bits                        00000000
_EDATA                            00000000
_EDATAbits                        00000000
_EDMACS                           00000000
_EDMACSH                          00000000
_EDMACSL                          00000000
_EDMADST                          00000000
_EDMADSTH                         00000000
_EDMADSTL                         00000000
_EDMAND                           00000000
_EDMANDH                          00000000
_EDMANDL                          00000000
_EDMAST                           00000000
_EDMASTH                          00000000
_EDMASTL                          00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
_EFLOCON                          00000000
_EFLOCONbits                      00000000
_EHT0                             00000000
_EHT1                             00000000
_EHT2                             00000000
_EHT3                             00000000
_EHT4                             00000000
_EHT5                             00000000
_EHT6                             00000000
_EHT7                             00000000
_EIE                              00000000
_EIEbits                          00000000
_EIR                              00000000
_EIRbits                          00000000
_EPAUS                            00000000
_EPAUSH                           00000000
_EPAUSL                           00000000
_EPKTCNT                          00000000
_EPMCS                            00000000
_EPMCSH                           00000000
_EPMCSL                           00000000
_EPMM0                            00000000
_EPMM1                            00000000
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_EPMM2                            00000000
_EPMM3                            00000000
_EPMM4                            00000000
_EPMM5                            00000000
_EPMM6                            00000000
_EPMM7                            00000000
_EPMO                             00000000
_EPMOH                            00000000
_EPMOL                            00000000
_ERDPT                            00000000
_ERDPTH                           00000000
_ERDPTL                           00000000
_ERXFCON                          00000000
_ERXFCONbits                      00000000
_ERXND                            00000000
_ERXNDH                           00000000
_ERXNDL                           00000000
_ERXRDPT                          00000000
_ERXRDPTH                         00000000
_ERXRDPTL                         00000000
_ERXST                            00000000
_ERXSTH                           00000000
_ERXSTL                           00000000
_ERXWRPT                          00000000
_ERXWRPTH                         00000000
_ERXWRPTL                         00000000
_ESTAT                            00000000
_ESTATbits                        00000000
_ETXND                            00000000
_ETXNDH                           00000000
_ETXNDL                           00000000
_ETXST                            00000000
_ETXSTH                           00000000
_ETXSTL                           00000000
_EWOLIE                           00000000
_EWOLIEbits                       00000000
_EWOLIR                           00000000
_EWOLIRbits                       00000000
_EWRPT                            00000000
_EWRPTH                           00000000
_EWRPTL                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_GenerateRandomDWORD              00000000
_GenerateRandomDWORD_wTime_1_1    00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_IPR3                             00000000
_IPR3bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LATF                             00000000
_LATFbits                         00000000
_LATG                             00000000
_LATGbits                         00000000
_LATH                             00000000
_LATHbits                         00000000
_LATJ                             00000000
_LATJbits                         00000000
_LCDText                          00000000
_MAADR1                           00000000
_MAADR2                           00000000
_MAADR3                           00000000
_MAADR4                           00000000
_MAADR5                           00000000
_MAADR6                           00000000
_MABBIPG                          00000000
_MACLCON1                         00000000
_MACLCON1bits                     00000000
_MACLCON2                         00000000
_MACLCON2bits                     00000000
_MACON1                           00000000
_MACON1bits                       00000000
_MACON2                           00000000
_MACON2bits                       00000000
_MACON3                           00000000
_MACON3bits                       00000000
_MACON4                           00000000
_MACON4bits                       00000000
_MAIPG                            00000000
_MAIPGH                           00000000
_MAIPGL                           00000000
_MAMXFL                           00000000
_MAMXFLH                          00000000
_MAMXFLL                          00000000
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_MEMCON                           00000000
_MEMCONbits                       00000000
_MICMD                            00000000
_MICMDbits                        00000000
_MICON                            00000000
_MICONbits                        00000000
_MIRD                             00000000
_MIRDH                            00000000
_MIRDL                            00000000
_MIREGADR                         00000000
_MISTAT                           00000000
_MISTATbits                       00000000
_MIWR                             00000000
_MIWRH                            00000000
_MIWRL                            00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIE3                             00000000
_PIE3bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PIR3                             00000000
_PIR3bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_PORTF                            00000000
_PORTFbits                        00000000
_PORTG                            00000000
_PORTGbits                        00000000
_PORTH                            00000000
_PORTHbits                        00000000
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_PORTJ                            00000000
_PORTJbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PR4                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_PSPCON                           00000000
_PSPCONbits                       00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCREG1                           00000000
_RCREG2                           00000000
_RCSTA                            00000000
_RCSTA1                           00000000
_RCSTA1bits                       00000000
_RCSTA2                           00000000
_RCSTA2bits                       00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRG1                           00000000
_SPBRG2                           00000000
_SPBRGH                           00000000
_SPBRGH1                          00000000
_SPBRGH2                          00000000
_SSP1ADD                          00000000
_SSP1BUF                          00000000
_SSP1CON1                         00000000
_SSP1CON1bits                     00000000
_SSP1CON2                         00000000
_SSP1CON2bits                     00000000
_SSP1STAT                         00000000
_SSP1STATbits                     00000000
_SSP2ADD                          00000000
_SSP2BUF                          00000000
_SSP2CON1                         00000000
_SSP2CON1bits                     00000000
_SSP2CON2                         00000000
_SSP2CON2bits                     00000000
_SSP2STAT                         00000000
_SSP2STATbits                     00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_StringToIPAddress                00000000
_StringToIPAddress_dwVal_1_1      00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_T4CON                            00000000
_T4CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TMR4                             00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TRISF                            00000000
_TRISFbits                        00000000
_TRISG                            00000000
_TRISGbits                        00000000
_TRISH                            00000000
_TRISHbits                        00000000
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
_TRISJ                            00000000
_TRISJbits                        00000000
_TXREG                            00000000
_TXREG1                           00000000
_TXREG2                           00000000
_TXSTA                            00000000
_TXSTA1                           00000000
_TXSTA1bits                       00000000
_TXSTA2                           00000000
_TXSTA2bits                       00000000
_TXSTAbits                        00000000
_UDPRxCount                       00000000
_UDPSocketInfo                    00000000
_UDPTxCount                       00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F97J60                        00000001
__gptrget1                        00000000
__gptrget2                        00000000
__gptrput1                        00000000
_activeUDPSocket                  00000000
_btohexa_high                     00000000
_btohexa_low                      00000000
_hexatob                          00000000
_hexatob_AsciiChars_1_1           00000000
_leftRotateDWORD                  00000000
_rand                             00000000
_srand                            00000000
_stdin                            00000000
_stdout                           00000000
_strnchr                          00000000
_swapl                            00000000
_swapl_v_1_1                      00000000
_swaps                            00000000
_swaps_t_1_1                      00000000
_toRotate                         00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005
r0x06                             00000006
r0x07                             00000007
r0x08                             00000008
r0x09                             00000009
r0x0a                             0000000A
r0x0b                             0000000B
r0x0c                             0000000C
r0x0d                             0000000D
r0x0e                             0000000E
r0x0f                             0000000F
r0x10                             00000010
gpasm-0.13.7 beta               Objects/Helpers.asm3-15-2010  11:43:31          PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE
 
r0x11                             00000011
r0x12                             00000012
r0x13                             00000013
r0x14                             00000014
r0x15                             00000015
r0x16                             00000016
r0x17                             00000017
r0x18                             00000018
r0x19                             00000019
r0x1a                             0000001A
r0x1b                             0000001B
r0x1c                             0000001C
r0x1d                             0000001D


Errors   :       0
Warnings :       0 reported,       0 suppressed
Messages :       0 reported,       0 suppressed

